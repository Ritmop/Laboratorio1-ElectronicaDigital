

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 19 10:20:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     0000                     	;# 
   369     0001                     	;# 
   370     0002                     	;# 
   371     0003                     	;# 
   372     0004                     	;# 
   373     0005                     	;# 
   374     0006                     	;# 
   375     0007                     	;# 
   376     0008                     	;# 
   377     0009                     	;# 
   378     000A                     	;# 
   379     000B                     	;# 
   380     000C                     	;# 
   381     000D                     	;# 
   382     000E                     	;# 
   383     000E                     	;# 
   384     000F                     	;# 
   385     0010                     	;# 
   386     0011                     	;# 
   387     0012                     	;# 
   388     0013                     	;# 
   389     0014                     	;# 
   390     0015                     	;# 
   391     0015                     	;# 
   392     0016                     	;# 
   393     0017                     	;# 
   394     0018                     	;# 
   395     0019                     	;# 
   396     001A                     	;# 
   397     001B                     	;# 
   398     001B                     	;# 
   399     001C                     	;# 
   400     001D                     	;# 
   401     001E                     	;# 
   402     001F                     	;# 
   403     0081                     	;# 
   404     0085                     	;# 
   405     0086                     	;# 
   406     0087                     	;# 
   407     0088                     	;# 
   408     0089                     	;# 
   409     008C                     	;# 
   410     008D                     	;# 
   411     008E                     	;# 
   412     008F                     	;# 
   413     0090                     	;# 
   414     0091                     	;# 
   415     0092                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009C                     	;# 
   428     009D                     	;# 
   429     009E                     	;# 
   430     009F                     	;# 
   431     0105                     	;# 
   432     0107                     	;# 
   433     0108                     	;# 
   434     0109                     	;# 
   435     010C                     	;# 
   436     010C                     	;# 
   437     010D                     	;# 
   438     010E                     	;# 
   439     010F                     	;# 
   440     0185                     	;# 
   441     0187                     	;# 
   442     0188                     	;# 
   443     0189                     	;# 
   444     018C                     	;# 
   445     018D                     	;# 
   446     001E                     _ADRESH	set	30
   447     001F                     _ADCON0bits	set	31
   448     0009                     _PORTE	set	9
   449     0007                     _PORTC	set	7
   450     0008                     _PORTD	set	8
   451     0005                     _PORTA	set	5
   452     0001                     _TMR0	set	1
   453     00F8                     _ADON	set	248
   454     005B                     _RBIE	set	91
   455     005D                     _T0IE	set	93
   456     005F                     _GIE	set	95
   457     0033                     _RB3	set	51
   458     0032                     _RB2	set	50
   459     0031                     _RB1	set	49
   460     0030                     _RB0	set	48
   461     0049                     _RE1	set	73
   462     0048                     _RE0	set	72
   463     005A                     _T0IF	set	90
   464     0058                     _RBIF	set	88
   465     009E                     _ADRESL	set	158
   466     0096                     _IOCB	set	150
   467     0095                     _WPUB	set	149
   468     0086                     _TRISB	set	134
   469     0081                     _OPTION_REGbits	set	129
   470     008F                     _OSCCONbits	set	143
   471     0089                     _TRISE	set	137
   472     0088                     _TRISD	set	136
   473     0087                     _TRISC	set	135
   474     0085                     _TRISA	set	133
   475     04FD                     _VCFG1	set	1277
   476     04FC                     _VCFG0	set	1276
   477     04FF                     _ADFM	set	1279
   478     040F                     _nRBPU	set	1039
   479     040D                     _T0CS	set	1037
   480     0478                     _SCS	set	1144
   481     0189                     _ANSELH	set	393
   482     0188                     _ANSEL	set	392
   483                           
   484                           	psect	cinit
   485     0011                     start_initialization:	
   486                           ; #config settings
   487                           
   488     0011                     __initialization:
   489                           
   490                           ; Clear objects allocated to BANK0
   491     0011  1283               	bcf	3,5	;RP0=0, select bank0
   492     0012  1303               	bcf	3,6	;RP1=0, select bank0
   493     0013  01AB               	clrf	__pbssBANK0& (0+127)
   494     0014  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   495     0015  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   496     0016  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   497     0017  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   498     0018  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   499     0019  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   500     001A                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503     001A                     __end_of__initialization:
   504     001A  0183               	clrf	3
   505     001B  120A  118A  28CE   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssBANK0
   508     002B                     __pbssBANK0:
   509     002B                     _nibbles:
   510     002B                     	ds	2
   511     002D                     _disp2:
   512     002D                     	ds	1
   513     002E                     _disp1:
   514     002E                     	ds	1
   515     002F                     _low_nib:
   516     002F                     	ds	1
   517     0030                     _high_nib:
   518     0030                     	ds	1
   519     0031                     _adc_val:
   520     0031                     	ds	1
   521                           
   522                           	psect	cstackCOMMON
   523     0070                     __pcstackCOMMON:
   524     0070                     ?_ioc_portB:
   525     0070                     ?_adc_sel_channel:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ??_adc_sel_channel:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_setup:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_hex_to_7seg:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_iocb_init:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_isr:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_main:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           ; 2 bytes @ 0x0
   548     0070                     	ds	1
   549     0071                     adc_sel_channel@channel:
   550                           
   551                           ; 1 bytes @ 0x1
   552     0071                     	ds	1
   553     0072                     ??_ioc_portB:
   554     0072                     ??_isr:	
   555                           ; 1 bytes @ 0x2
   556                           
   557                           
   558                           ; 1 bytes @ 0x2
   559     0072                     	ds	3
   560     0075                     ??_hex_to_7seg:
   561     0075                     ??_iocb_init:	
   562                           ; 1 bytes @ 0x5
   563                           
   564     0075                     ?_adc_init:	
   565                           ; 1 bytes @ 0x5
   566                           
   567     0075                     ?_adc_read:	
   568                           ; 1 bytes @ 0x5
   569                           
   570     0075                     ?_split_nibbles:	
   571                           ; 2 bytes @ 0x5
   572                           
   573     0075                     iocb_init@pinesB:	
   574                           ; 2 bytes @ 0x5
   575                           
   576     0075                     adc_init@R:	
   577                           ; 1 bytes @ 0x5
   578                           
   579                           
   580                           ; 1 bytes @ 0x5
   581     0075                     	ds	1
   582     0076                     adc_init@clock:
   583                           
   584                           ; 1 bytes @ 0x6
   585     0076                     	ds	1
   586     0077                     ??_adc_read:
   587     0077                     adc_init@channel:	
   588                           ; 1 bytes @ 0x7
   589                           
   590     0077                     hex_to_7seg@hex:	
   591                           ; 1 bytes @ 0x7
   592                           
   593                           
   594                           ; 1 bytes @ 0x7
   595     0077                     	ds	1
   596     0078                     adc_init@J:
   597                           
   598                           ; 1 bytes @ 0x8
   599     0078                     	ds	1
   600     0079                     ??_setup:
   601                           
   602                           	psect	cstackBANK0
   603     0020                     __pcstackBANK0:	
   604                           ; 1 bytes @ 0x9
   605                           
   606     0020                     ??_split_nibbles:
   607     0020                     ??_adc_init:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612     0020                     	ds	4
   613     0024                     split_nibbles@high_nib:
   614                           
   615                           ; 1 bytes @ 0x4
   616     0024                     	ds	1
   617     0025                     split_nibbles@low_nib:
   618                           
   619                           ; 1 bytes @ 0x5
   620     0025                     	ds	1
   621     0026                     split_nibbles@hex:
   622                           
   623                           ; 1 bytes @ 0x6
   624     0026                     	ds	1
   625     0027                     ??_main:
   626                           
   627                           ; 1 bytes @ 0x7
   628     0027                     	ds	2
   629     0029                     _main$154:
   630                           
   631                           ; 2 bytes @ 0x9
   632     0029                     	ds	2
   633                           
   634                           	psect	maintext
   635     00CE                     __pmaintext:	
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 86 in file "Lab1.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  2   98[None  ] int 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : B00/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       2       0       0       0
   657 ;;      Temps:          0       2       0       0       0
   658 ;;      Totals:         0       4       0       0       0
   659 ;;Total ram usage:        4 bytes
   660 ;; Hardware stack levels required when called: 5
   661 ;; This function calls:
   662 ;;		_adc_read
   663 ;;		_hex_to_7seg
   664 ;;		_setup
   665 ;;		_split_nibbles
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671     00CE                     _main:	
   672                           ;psect for function _main
   673                           
   674     00CE                     l1191:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   677                           
   678                           
   679                           ;Lab1.c: 87:     OPTION_REGbits.PS = 0b000;
   680     00CE  120A  118A  211A  120A  118A  	fcall	_setup
   681     00D3                     l1193:
   682                           
   683                           ;Lab1.c: 88:     T0CS = 0;
   684     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   685     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   686     00D5  1409               	bsf	9,0	;volatile
   687     00D6                     l1195:
   688     00D6  120A  118A  21DA  120A  118A  	fcall	_adc_read
   689     00DB  0876               	movf	?_adc_read+1,w
   690     00DC  1283               	bcf	3,5	;RP0=0, select bank0
   691     00DD  1303               	bcf	3,6	;RP1=0, select bank0
   692     00DE  00B1               	movwf	_adc_val
   693     00DF                     l1197:
   694     00DF  0805               	movf	5,w	;volatile
   695     00E0  120A  118A  21A6  120A  118A  	fcall	_split_nibbles
   696     00E5  0876               	movf	?_split_nibbles+1,w
   697     00E6  1283               	bcf	3,5	;RP0=0, select bank0
   698     00E7  1303               	bcf	3,6	;RP1=0, select bank0
   699     00E8  00AC               	movwf	_nibbles+1
   700     00E9  0875               	movf	?_split_nibbles,w
   701     00EA  00AB               	movwf	_nibbles
   702     00EB                     l1199:
   703     00EB  082B               	movf	_nibbles,w
   704     00EC  00AF               	movwf	_low_nib
   705     00ED                     l1201:
   706     00ED  082C               	movf	_nibbles+1,w
   707     00EE  00B0               	movwf	_high_nib
   708     00EF                     l1203:
   709     00EF  082F               	movf	_low_nib,w
   710     00F0  120A  118A  201E  120A  118A  	fcall	_hex_to_7seg
   711     00F5  1283               	bcf	3,5	;RP0=0, select bank0
   712     00F6  1303               	bcf	3,6	;RP1=0, select bank0
   713     00F7  00AD               	movwf	_disp2
   714     00F8                     l1205:
   715     00F8  0830               	movf	_high_nib,w
   716     00F9  120A  118A  201E  120A  118A  	fcall	_hex_to_7seg
   717     00FE  1283               	bcf	3,5	;RP0=0, select bank0
   718     00FF  1303               	bcf	3,6	;RP1=0, select bank0
   719     0100  00AE               	movwf	_disp1
   720     0101                     l1207:
   721     0101  1809               	btfsc	9,0	;volatile
   722     0102  2904               	goto	u251
   723     0103  2905               	goto	u250
   724     0104                     u251:
   725     0104  290D               	goto	l1211
   726     0105                     u250:
   727     0105                     l1209:
   728     0105  082D               	movf	_disp2,w
   729     0106  00A7               	movwf	??_main
   730     0107  01A8               	clrf	??_main+1
   731     0108  0827               	movf	??_main,w
   732     0109  00A9               	movwf	_main$154
   733     010A  0828               	movf	??_main+1,w
   734     010B  00AA               	movwf	_main$154+1
   735     010C  2914               	goto	l103
   736     010D                     l1211:
   737     010D  082E               	movf	_disp1,w
   738     010E  00A7               	movwf	??_main
   739     010F  01A8               	clrf	??_main+1
   740     0110  0827               	movf	??_main,w
   741     0111  00A9               	movwf	_main$154
   742     0112  0828               	movf	??_main+1,w
   743     0113  00AA               	movwf	_main$154+1
   744     0114                     l103:
   745     0114  0829               	movf	_main$154,w
   746     0115  0088               	movwf	8	;volatile
   747     0116  28D6               	goto	l1195
   748     0117  120A  118A  280E   	ljmp	start
   749     011A                     __end_of_main:
   750                           
   751                           	psect	text1
   752     01A6                     __ptext1:	
   753 ;; *************** function _split_nibbles *****************
   754 ;; Defined at:
   755 ;;		line 59 in file "disp_7seg.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  hex             1    wreg     unsigned char 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  hex             1    6[BANK0 ] unsigned char 
   760 ;;  low_nib         1    5[BANK0 ] unsigned char 
   761 ;;  high_nib        1    4[BANK0 ] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  2    5[COMMON] unsigned int 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0, btemp+1
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         2       0       0       0       0
   772 ;;      Locals:         0       3       0       0       0
   773 ;;      Temps:          0       4       0       0       0
   774 ;;      Totals:         2       7       0       0       0
   775 ;;Total ram usage:        9 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 3
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     01A6                     _split_nibbles:	
   786                           ;psect for function _split_nibbles
   787                           
   788                           
   789                           ;incstack = 0
   790                           ; Regs used in _split_nibbles: [wreg+status,2+status,0+btemp+1]
   791                           ;split_nibbles@hex stored from wreg
   792     01A6  1283               	bcf	3,5	;RP0=0, select bank0
   793     01A7  1303               	bcf	3,6	;RP1=0, select bank0
   794     01A8  00A6               	movwf	split_nibbles@hex
   795     01A9                     l1109:
   796                           
   797                           ;disp_7seg.c: 60:     uint8_t high_nib;;disp_7seg.c: 61:     uint8_t low_nib;;disp_7seg.
      +                          c: 62:     low_nib = hex & 0x0F;
   798     01A9  0826               	movf	split_nibbles@hex,w
   799     01AA  390F               	andlw	15
   800     01AB  00A5               	movwf	split_nibbles@low_nib
   801     01AC                     l1111:
   802                           
   803                           ;disp_7seg.c: 63:     high_nib = hex>>4 & 0x0F;
   804     01AC  0826               	movf	split_nibbles@hex,w
   805     01AD  00A0               	movwf	??_split_nibbles
   806     01AE  3004               	movlw	4
   807     01AF                     u245:
   808     01AF  1003               	clrc
   809     01B0  0CA0               	rrf	??_split_nibbles,f
   810     01B1  3EFF               	addlw	-1
   811     01B2  1D03               	skipz
   812     01B3  29AF               	goto	u245
   813     01B4  0820               	movf	??_split_nibbles,w
   814     01B5  390F               	andlw	15
   815     01B6  00A4               	movwf	split_nibbles@high_nib
   816     01B7                     l1113:
   817                           
   818                           ;disp_7seg.c: 64:     return high_nib<<8 | low_nib;
   819     01B7  0825               	movf	split_nibbles@low_nib,w
   820     01B8  00A0               	movwf	??_split_nibbles
   821     01B9  01A1               	clrf	??_split_nibbles+1
   822     01BA  0824               	movf	split_nibbles@high_nib,w
   823     01BB  00A2               	movwf	??_split_nibbles+2
   824     01BC  01A3               	clrf	??_split_nibbles+3
   825     01BD  0822               	movf	??_split_nibbles+2,w
   826     01BE  00A3               	movwf	??_split_nibbles+3
   827     01BF  01A2               	clrf	??_split_nibbles+2
   828     01C0  0820               	movf	??_split_nibbles,w
   829     01C1  0422               	iorwf	??_split_nibbles+2,w
   830     01C2  00F5               	movwf	?_split_nibbles
   831     01C3  0821               	movf	??_split_nibbles+1,w
   832     01C4  0423               	iorwf	??_split_nibbles+3,w
   833     01C5  00F6               	movwf	?_split_nibbles+1
   834     01C6                     l183:
   835     01C6  0008               	return
   836     01C7                     __end_of_split_nibbles:
   837                           
   838                           	psect	text2
   839     011A                     __ptext2:	
   840 ;; *************** function _setup *****************
   841 ;; Defined at:
   842 ;;		line 102 in file "Lab1.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 4
   863 ;; This function calls:
   864 ;;		_adc_init
   865 ;;		_iocb_init
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871     011A                     _setup:	
   872                           ;psect for function _setup
   873                           
   874     011A                     l1063:	
   875                           ;incstack = 0
   876                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   877                           
   878     011A  1683               	bsf	3,5	;RP0=1, select bank3
   879     011B  1703               	bsf	3,6	;RP1=1, select bank3
   880     011C  0188               	clrf	8	;volatile
   881     011D                     l1065:
   882     011D  3028               	movlw	40
   883     011E  0089               	movwf	9	;volatile
   884     011F                     l1067:
   885     011F  1683               	bsf	3,5	;RP0=1, select bank1
   886     0120  1303               	bcf	3,6	;RP1=0, select bank1
   887     0121  0185               	clrf	5	;volatile
   888     0122                     l1069:
   889     0122  1283               	bcf	3,5	;RP0=0, select bank0
   890     0123  1303               	bcf	3,6	;RP1=0, select bank0
   891     0124  0185               	clrf	5	;volatile
   892     0125                     l1071:
   893     0125  1683               	bsf	3,5	;RP0=1, select bank1
   894     0126  1303               	bcf	3,6	;RP1=0, select bank1
   895     0127  0187               	clrf	7	;volatile
   896     0128                     l1073:
   897     0128  1283               	bcf	3,5	;RP0=0, select bank0
   898     0129  1303               	bcf	3,6	;RP1=0, select bank0
   899     012A  0187               	clrf	7	;volatile
   900     012B                     l1075:
   901     012B  1683               	bsf	3,5	;RP0=1, select bank1
   902     012C  1303               	bcf	3,6	;RP1=0, select bank1
   903     012D  0188               	clrf	8	;volatile
   904     012E                     l1077:
   905     012E  1283               	bcf	3,5	;RP0=0, select bank0
   906     012F  1303               	bcf	3,6	;RP1=0, select bank0
   907     0130  0188               	clrf	8	;volatile
   908     0131                     l1079:
   909     0131  1683               	bsf	3,5	;RP0=1, select bank1
   910     0132  1303               	bcf	3,6	;RP1=0, select bank1
   911     0133  0189               	clrf	9	;volatile
   912     0134                     l1081:
   913     0134  1283               	bcf	3,5	;RP0=0, select bank0
   914     0135  1303               	bcf	3,6	;RP1=0, select bank0
   915     0136  0189               	clrf	9	;volatile
   916     0137                     l1083:
   917     0137  3070               	movlw	112
   918     0138  1683               	bsf	3,5	;RP0=1, select bank1
   919     0139  1303               	bcf	3,6	;RP1=0, select bank1
   920     013A  048F               	iorwf	15,f	;volatile
   921     013B                     l1085:
   922     013B  140F               	bsf	15,0	;volatile
   923     013C                     l1087:
   924     013C  300F               	movlw	15
   925     013D  120A  118A  21C7  120A  118A  	fcall	_iocb_init
   926     0142                     l1089:
   927     0142  01F5               	clrf	adc_init@R
   928     0143  3008               	movlw	8
   929     0144  00F6               	movwf	adc_init@clock
   930     0145  300D               	movlw	13
   931     0146  00F7               	movwf	adc_init@channel
   932     0147  3000               	movlw	0
   933     0148  120A  118A  207B  120A  118A  	fcall	_adc_init
   934     014D                     l1091:
   935     014D  178B               	bsf	11,7	;volatile
   936     014E                     l1093:
   937     014E  168B               	bsf	11,5	;volatile
   938     014F                     l1095:
   939     014F  30F8               	movlw	-8
   940     0150  1683               	bsf	3,5	;RP0=1, select bank1
   941     0151  1303               	bcf	3,6	;RP1=0, select bank1
   942     0152  0581               	andwf	1,f	;volatile
   943     0153                     l1097:
   944     0153  1281               	bcf	1,5	;volatile
   945     0154                     l1099:
   946     0154  30F6               	movlw	246
   947     0155  1283               	bcf	3,5	;RP0=0, select bank0
   948     0156  1303               	bcf	3,6	;RP1=0, select bank0
   949     0157  0081               	movwf	1	;volatile
   950     0158                     l1101:
   951     0158  110B               	bcf	11,2	;volatile
   952     0159                     l109:
   953     0159  0008               	return
   954     015A                     __end_of_setup:
   955                           
   956                           	psect	text3
   957     01C7                     __ptext3:	
   958 ;; *************** function _iocb_init *****************
   959 ;; Defined at:
   960 ;;		line 4 in file "iocb_init.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  pinesB          1    wreg     unsigned char 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  pinesB          1    5[COMMON] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, btemp+1
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         1       0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 3
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_setup
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     01C7                     _iocb_init:	
   989                           ;psect for function _iocb_init
   990                           
   991                           
   992                           ;incstack = 0
   993                           ; Regs used in _iocb_init: [wreg+status,2+status,0+btemp+1]
   994                           ;iocb_init@pinesB stored from wreg
   995     01C7  00F5               	movwf	iocb_init@pinesB
   996     01C8                     l1033:
   997                           
   998                           ;iocb_init.c: 5:     TRISB |= pinesB;
   999     01C8  0875               	movf	iocb_init@pinesB,w	;volatile
  1000     01C9  00FF               	movwf	btemp+1
  1001     01CA  087F               	movf	btemp+1,w
  1002     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  1003     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  1004     01CD  0486               	iorwf	6,f	;volatile
  1005     01CE                     l1035:
  1006                           
  1007                           ;iocb_init.c: 6:     nRBPU = 0;
  1008     01CE  1381               	bcf	1,7	;volatile
  1009                           
  1010                           ;iocb_init.c: 7:     WPUB |= pinesB;
  1011     01CF  0875               	movf	iocb_init@pinesB,w	;volatile
  1012     01D0  00FF               	movwf	btemp+1
  1013     01D1  087F               	movf	btemp+1,w
  1014     01D2  0495               	iorwf	21,f	;volatile
  1015     01D3                     l1037:
  1016                           
  1017                           ;iocb_init.c: 8:     RBIE = 1;
  1018     01D3  158B               	bsf	11,3	;volatile
  1019                           
  1020                           ;iocb_init.c: 9:     IOCB |= pinesB;
  1021     01D4  0875               	movf	iocb_init@pinesB,w	;volatile
  1022     01D5  00FF               	movwf	btemp+1
  1023     01D6  087F               	movf	btemp+1,w
  1024     01D7  0496               	iorwf	22,f	;volatile
  1025     01D8                     l1039:
  1026                           
  1027                           ;iocb_init.c: 10:     GIE = 1;
  1028     01D8  178B               	bsf	11,7	;volatile
  1029     01D9                     l124:
  1030     01D9  0008               	return
  1031     01DA                     __end_of_iocb_init:
  1032                           
  1033                           	psect	text4
  1034     007B                     __ptext4:	
  1035 ;; *************** function _adc_init *****************
  1036 ;; Defined at:
  1037 ;;		line 4 in file "ADC_lib.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  J               1    wreg     unsigned char 
  1040 ;;  R               1    5[COMMON] unsigned char 
  1041 ;;  clock           1    6[COMMON] unsigned char 
  1042 ;;  channel         1    7[COMMON] unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  J               1    8[COMMON] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         3       0       0       0       0
  1055 ;;      Locals:         1       0       0       0       0
  1056 ;;      Temps:          0       2       0       0       0
  1057 ;;      Totals:         4       2       0       0       0
  1058 ;;Total ram usage:        6 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; Hardware stack levels required when called: 3
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_setup
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068     007B                     _adc_init:	
  1069                           ;psect for function _adc_init
  1070                           
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1074                           ;adc_init@J stored from wreg
  1075     007B  00F8               	movwf	adc_init@J
  1076     007C                     l1041:
  1077                           
  1078                           ;ADC_lib.c: 13:     ADFM = J;
  1079     007C  1878               	btfsc	adc_init@J,0
  1080     007D  287F               	goto	u171
  1081     007E  2883               	goto	u170
  1082     007F                     u171:
  1083     007F  1683               	bsf	3,5	;RP0=1, select bank1
  1084     0080  1303               	bcf	3,6	;RP1=0, select bank1
  1085     0081  179F               	bsf	31,7	;volatile
  1086     0082  2886               	goto	u184
  1087     0083                     u170:
  1088     0083  1683               	bsf	3,5	;RP0=1, select bank1
  1089     0084  1303               	bcf	3,6	;RP1=0, select bank1
  1090     0085  139F               	bcf	31,7	;volatile
  1091     0086                     u184:
  1092                           
  1093                           ;ADC_lib.c: 14:     VCFG0 = R;
  1094     0086  1875               	btfsc	adc_init@R,0
  1095     0087  2889               	goto	u191
  1096     0088  288D               	goto	u190
  1097     0089                     u191:
  1098     0089  1683               	bsf	3,5	;RP0=1, select bank1
  1099     008A  1303               	bcf	3,6	;RP1=0, select bank1
  1100     008B  161F               	bsf	31,4	;volatile
  1101     008C  2890               	goto	u204
  1102     008D                     u190:
  1103     008D  1683               	bsf	3,5	;RP0=1, select bank1
  1104     008E  1303               	bcf	3,6	;RP1=0, select bank1
  1105     008F  121F               	bcf	31,4	;volatile
  1106     0090                     u204:
  1107                           
  1108                           ;ADC_lib.c: 15:     VCFG1 = R;
  1109     0090  1875               	btfsc	adc_init@R,0
  1110     0091  2893               	goto	u211
  1111     0092  2897               	goto	u210
  1112     0093                     u211:
  1113     0093  1683               	bsf	3,5	;RP0=1, select bank1
  1114     0094  1303               	bcf	3,6	;RP1=0, select bank1
  1115     0095  169F               	bsf	31,5	;volatile
  1116     0096  289A               	goto	u224
  1117     0097                     u210:
  1118     0097  1683               	bsf	3,5	;RP0=1, select bank1
  1119     0098  1303               	bcf	3,6	;RP1=0, select bank1
  1120     0099  129F               	bcf	31,5	;volatile
  1121     009A                     u224:
  1122                           
  1123                           ;ADC_lib.c: 17:     switch(clock){
  1124     009A  28AB               	goto	l1053
  1125     009B                     l1043:
  1126                           
  1127                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
  1128     009B  303F               	movlw	-193
  1129     009C  059F               	andwf	31,f	;volatile
  1130                           
  1131                           ;ADC_lib.c: 21:             break;
  1132     009D  28C3               	goto	l1055
  1133     009E                     l1045:
  1134                           
  1135                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
  1136     009E  081F               	movf	31,w	;volatile
  1137     009F  393F               	andlw	-193
  1138     00A0  3840               	iorlw	64
  1139     00A1  009F               	movwf	31	;volatile
  1140                           
  1141                           ;ADC_lib.c: 25:             break;
  1142     00A2  28C3               	goto	l1055
  1143     00A3                     l1047:
  1144                           
  1145                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
  1146     00A3  081F               	movf	31,w	;volatile
  1147     00A4  393F               	andlw	-193
  1148     00A5  3880               	iorlw	128
  1149     00A6  009F               	movwf	31	;volatile
  1150                           
  1151                           ;ADC_lib.c: 29:             break;
  1152     00A7  28C3               	goto	l1055
  1153     00A8                     l1049:
  1154                           
  1155                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
  1156     00A8  30C0               	movlw	192
  1157     00A9  049F               	iorwf	31,f	;volatile
  1158                           
  1159                           ;ADC_lib.c: 33:             break;
  1160     00AA  28C3               	goto	l1055
  1161     00AB                     l1053:
  1162     00AB  0876               	movf	adc_init@clock,w
  1163     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1164     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1165     00AE  00A0               	movwf	??_adc_init
  1166     00AF  01A1               	clrf	??_adc_init+1
  1167                           
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ; direct_byte           11     8 (fixed)
  1175                           ; jumptable            260     6 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177     00B0  0821               	movf	??_adc_init+1,w
  1178     00B1  3A00               	xorlw	0	; case 0
  1179     00B2  1903               	skipnz
  1180     00B3  28B5               	goto	l1253
  1181     00B4  28C3               	goto	l1055
  1182     00B5                     l1253:
  1183                           
  1184                           ; Switch size 1, requested type "simple"
  1185                           ; Number of cases is 4, Range of values is 1 to 20
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           13     7 (average)
  1189                           ; direct_byte           71    11 (fixed)
  1190                           ; jumptable            263     9 (fixed)
  1191                           ;	Chosen strategy is simple_byte
  1192     00B5  0820               	movf	??_adc_init,w
  1193     00B6  3A01               	xorlw	1	; case 1
  1194     00B7  1903               	skipnz
  1195     00B8  289B               	goto	l1043
  1196     00B9  3A05               	xorlw	5	; case 4
  1197     00BA  1903               	skipnz
  1198     00BB  289E               	goto	l1045
  1199     00BC  3A0C               	xorlw	12	; case 8
  1200     00BD  1903               	skipnz
  1201     00BE  28A3               	goto	l1047
  1202     00BF  3A1C               	xorlw	28	; case 20
  1203     00C0  1903               	skipnz
  1204     00C1  28A8               	goto	l1049
  1205     00C2  28C3               	goto	l1055
  1206     00C3                     l1055:
  1207                           
  1208                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1209     00C3  0877               	movf	adc_init@channel,w
  1210     00C4  00A0               	movwf	??_adc_init
  1211     00C5  0DA0               	rlf	??_adc_init,f
  1212     00C6  0DA0               	rlf	??_adc_init,f
  1213     00C7  081F               	movf	31,w	;volatile
  1214     00C8  0620               	xorwf	??_adc_init,w
  1215     00C9  39C3               	andlw	-61
  1216     00CA  0620               	xorwf	??_adc_init,w
  1217     00CB  009F               	movwf	31	;volatile
  1218     00CC                     l1057:
  1219                           
  1220                           ;ADC_lib.c: 38:     ADON = 1;
  1221     00CC  141F               	bsf	31,0	;volatile
  1222     00CD                     l147:
  1223     00CD  0008               	return
  1224     00CE                     __end_of_adc_init:
  1225                           
  1226                           	psect	text5
  1227     001E                     __ptext5:	
  1228 ;; *************** function _hex_to_7seg *****************
  1229 ;; Defined at:
  1230 ;;		line 21 in file "disp_7seg.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  hex             1    wreg     unsigned char 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  hex             1    7[COMMON] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         1       0       0       0       0
  1246 ;;      Temps:          2       0       0       0       0
  1247 ;;      Totals:         3       0       0       0       0
  1248 ;;Total ram usage:        3 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 3
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258     001E                     _hex_to_7seg:	
  1259                           ;psect for function _hex_to_7seg
  1260                           
  1261                           
  1262                           ;incstack = 0
  1263                           ; Regs used in _hex_to_7seg: [wreg-fsr0h+status,2+status,0]
  1264                           ;hex_to_7seg@hex stored from wreg
  1265     001E  00F7               	movwf	hex_to_7seg@hex
  1266     001F                     l1117:
  1267                           
  1268                           ;disp_7seg.c: 22:     switch(hex){
  1269     001F  2840               	goto	l1185
  1270     0020                     l1119:
  1271                           
  1272                           ;disp_7seg.c: 24:             return 0b00111111;
  1273     0020  303F               	movlw	63
  1274     0021  287A               	goto	l164
  1275     0022                     l1123:
  1276                           
  1277                           ;disp_7seg.c: 26:             return 0b00000110;
  1278     0022  3006               	movlw	6
  1279     0023  287A               	goto	l164
  1280     0024                     l1127:
  1281                           
  1282                           ;disp_7seg.c: 28:             return 0b01011011;
  1283     0024  305B               	movlw	91
  1284     0025  287A               	goto	l164
  1285     0026                     l1131:
  1286                           
  1287                           ;disp_7seg.c: 30:             return 0b01001111;
  1288     0026  304F               	movlw	79
  1289     0027  287A               	goto	l164
  1290     0028                     l1135:
  1291                           
  1292                           ;disp_7seg.c: 32:             return 0b01100110;
  1293     0028  3066               	movlw	102
  1294     0029  287A               	goto	l164
  1295     002A                     l1139:
  1296                           
  1297                           ;disp_7seg.c: 34:             return 0b01101101;
  1298     002A  306D               	movlw	109
  1299     002B  287A               	goto	l164
  1300     002C                     l1143:
  1301                           
  1302                           ;disp_7seg.c: 36:             return 0b01111101;
  1303     002C  307D               	movlw	125
  1304     002D  287A               	goto	l164
  1305     002E                     l1147:
  1306                           
  1307                           ;disp_7seg.c: 38:             return 0b00000111;
  1308     002E  3007               	movlw	7
  1309     002F  287A               	goto	l164
  1310     0030                     l1151:
  1311                           
  1312                           ;disp_7seg.c: 40:             return 0b01111111;
  1313     0030  307F               	movlw	127
  1314     0031  287A               	goto	l164
  1315     0032                     l1155:
  1316                           
  1317                           ;disp_7seg.c: 42:             return 0b01101111;
  1318     0032  306F               	movlw	111
  1319     0033  287A               	goto	l164
  1320     0034                     l1159:
  1321                           
  1322                           ;disp_7seg.c: 44:             return 0b01110111;
  1323     0034  3077               	movlw	119
  1324     0035  287A               	goto	l164
  1325     0036                     l1163:
  1326                           
  1327                           ;disp_7seg.c: 46:             return 0b01111100;
  1328     0036  307C               	movlw	124
  1329     0037  287A               	goto	l164
  1330     0038                     l1167:
  1331                           
  1332                           ;disp_7seg.c: 48:             return 0b00111001;
  1333     0038  3039               	movlw	57
  1334     0039  287A               	goto	l164
  1335     003A                     l1171:
  1336                           
  1337                           ;disp_7seg.c: 50:             return 0b01011110;
  1338     003A  305E               	movlw	94
  1339     003B  287A               	goto	l164
  1340     003C                     l1175:
  1341                           
  1342                           ;disp_7seg.c: 52:             return 0b01111001;
  1343     003C  3079               	movlw	121
  1344     003D  287A               	goto	l164
  1345     003E                     l1179:
  1346                           
  1347                           ;disp_7seg.c: 54:             return 0b01110001;
  1348     003E  3071               	movlw	113
  1349     003F  287A               	goto	l164
  1350     0040                     l1185:
  1351     0040  0877               	movf	hex_to_7seg@hex,w
  1352     0041  00F5               	movwf	??_hex_to_7seg
  1353     0042  01F6               	clrf	??_hex_to_7seg+1
  1354                           
  1355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 1, Range of values is 0 to 0
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte            4     3 (average)
  1361                           ; direct_byte           11     8 (fixed)
  1362                           ; jumptable            260     6 (fixed)
  1363                           ;	Chosen strategy is simple_byte
  1364     0043  0876               	movf	??_hex_to_7seg+1,w
  1365     0044  3A00               	xorlw	0	; case 0
  1366     0045  1903               	skipnz
  1367     0046  2848               	goto	l1255
  1368     0047  287A               	goto	l164
  1369     0048                     l1255:
  1370                           
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 16, Range of values is 0 to 15
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte           49    25 (average)
  1376                           ; direct_byte           56     8 (fixed)
  1377                           ; jumptable            260     6 (fixed)
  1378                           ;	Chosen strategy is simple_byte
  1379     0048  0875               	movf	??_hex_to_7seg,w
  1380     0049  3A00               	xorlw	0	; case 0
  1381     004A  1903               	skipnz
  1382     004B  2820               	goto	l1119
  1383     004C  3A01               	xorlw	1	; case 1
  1384     004D  1903               	skipnz
  1385     004E  2822               	goto	l1123
  1386     004F  3A03               	xorlw	3	; case 2
  1387     0050  1903               	skipnz
  1388     0051  2824               	goto	l1127
  1389     0052  3A01               	xorlw	1	; case 3
  1390     0053  1903               	skipnz
  1391     0054  2826               	goto	l1131
  1392     0055  3A07               	xorlw	7	; case 4
  1393     0056  1903               	skipnz
  1394     0057  2828               	goto	l1135
  1395     0058  3A01               	xorlw	1	; case 5
  1396     0059  1903               	skipnz
  1397     005A  282A               	goto	l1139
  1398     005B  3A03               	xorlw	3	; case 6
  1399     005C  1903               	skipnz
  1400     005D  282C               	goto	l1143
  1401     005E  3A01               	xorlw	1	; case 7
  1402     005F  1903               	skipnz
  1403     0060  282E               	goto	l1147
  1404     0061  3A0F               	xorlw	15	; case 8
  1405     0062  1903               	skipnz
  1406     0063  2830               	goto	l1151
  1407     0064  3A01               	xorlw	1	; case 9
  1408     0065  1903               	skipnz
  1409     0066  2832               	goto	l1155
  1410     0067  3A03               	xorlw	3	; case 10
  1411     0068  1903               	skipnz
  1412     0069  2834               	goto	l1159
  1413     006A  3A01               	xorlw	1	; case 11
  1414     006B  1903               	skipnz
  1415     006C  2836               	goto	l1163
  1416     006D  3A07               	xorlw	7	; case 12
  1417     006E  1903               	skipnz
  1418     006F  2838               	goto	l1167
  1419     0070  3A01               	xorlw	1	; case 13
  1420     0071  1903               	skipnz
  1421     0072  283A               	goto	l1171
  1422     0073  3A03               	xorlw	3	; case 14
  1423     0074  1903               	skipnz
  1424     0075  283C               	goto	l1175
  1425     0076  3A01               	xorlw	1	; case 15
  1426     0077  1903               	skipnz
  1427     0078  283E               	goto	l1179
  1428     0079  287A               	goto	l164
  1429     007A                     l164:
  1430     007A  0008               	return
  1431     007B                     __end_of_hex_to_7seg:
  1432                           
  1433                           	psect	text6
  1434     01DA                     __ptext6:	
  1435 ;; *************** function _adc_read *****************
  1436 ;; Defined at:
  1437 ;;		line 42 in file "ADC_lib.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2    5[COMMON] unsigned int 
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         2       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         2       0       0       0       0
  1455 ;;Total ram usage:        2 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 3
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465     01DA                     _adc_read:	
  1466                           ;psect for function _adc_read
  1467                           
  1468     01DA                     l1103:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _adc_read: [wreg]
  1471                           
  1472                           
  1473                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  1474     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1475     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1476     01DC  149F               	bsf	31,1	;volatile
  1477     01DD                     l150:	
  1478                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  1479                           
  1480     01DD  189F               	btfsc	31,1	;volatile
  1481     01DE  29E0               	goto	u231
  1482     01DF  29E1               	goto	u230
  1483     01E0                     u231:
  1484     01E0  29DD               	goto	l150
  1485     01E1                     u230:
  1486     01E1                     l1105:
  1487                           
  1488                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  1489     01E1  081E               	movf	30,w	;volatile
  1490     01E2  00F6               	movwf	?_adc_read+1
  1491     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1492     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1493     01E5  081E               	movf	30,w	;volatile
  1494     01E6  00F5               	movwf	?_adc_read
  1495     01E7                     l153:
  1496     01E7  0008               	return
  1497     01E8                     __end_of_adc_read:
  1498                           
  1499                           	psect	text7
  1500     0181                     __ptext7:	
  1501 ;; *************** function _isr *****************
  1502 ;; Defined at:
  1503 ;;		line 54 in file "Lab1.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0
  1519 ;;      Temps:          3       0       0       0       0
  1520 ;;      Totals:         3       0       0       0       0
  1521 ;;Total ram usage:        3 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 2
  1524 ;; This function calls:
  1525 ;;		_ioc_portB
  1526 ;; This function is called by:
  1527 ;;		Interrupt level 1
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531     0181                     _isr:	
  1532                           ;psect for function _isr
  1533                           
  1534     0181                     i1l951:
  1535                           
  1536                           ;Lab1.c: 55:         nibbles = split_nibbles(PORTA);
  1537     0181  1C0B               	btfss	11,0	;volatile
  1538     0182  2984               	goto	u13_21
  1539     0183  2985               	goto	u13_20
  1540     0184                     u13_21:
  1541     0184  298B               	goto	i1l957
  1542     0185                     u13_20:
  1543     0185                     i1l953:
  1544                           
  1545                           ;Lab1.c: 56:         low_nib = nibbles;
  1546     0185  120A  118A  215A  120A  118A  	fcall	_ioc_portB
  1547     018A                     i1l955:
  1548                           
  1549                           ;Lab1.c: 57:         high_nib = nibbles>>8;
  1550     018A  100B               	bcf	11,0	;volatile
  1551     018B                     i1l957:
  1552                           
  1553                           ;Lab1.c: 59:         disp1 = hex_to_7seg(high_nib);
  1554     018B  1D0B               	btfss	11,2	;volatile
  1555     018C  298E               	goto	u14_21
  1556     018D  298F               	goto	u14_20
  1557     018E                     u14_21:
  1558     018E  299D               	goto	i1l87
  1559     018F                     u14_20:
  1560     018F                     i1l959:
  1561                           
  1562                           ;Lab1.c: 60:         PORTD = RE0?disp1:disp2;
  1563     018F  1283               	bcf	3,5	;RP0=0, select bank0
  1564     0190  1303               	bcf	3,6	;RP1=0, select bank0
  1565     0191  1C09               	btfss	9,0	;volatile
  1566     0192  2994               	goto	u15_21
  1567     0193  2995               	goto	u15_20
  1568     0194                     u15_21:
  1569     0194  2998               	goto	i1l85
  1570     0195                     u15_20:
  1571     0195                     i1l961:
  1572                           
  1573                           ;Lab1.c: 61:     }
  1574     0195  1009               	bcf	9,0	;volatile
  1575                           
  1576                           ;Lab1.c: 62: }
  1577     0196  1489               	bsf	9,1	;volatile
  1578                           
  1579                           ;Lab1.c: 63: 
  1580     0197  299A               	goto	i1l963
  1581     0198                     i1l85:	
  1582                           ;Lab1.c: 64: void setup(void){
  1583                           
  1584                           
  1585                           ;Lab1.c: 65: 
  1586     0198  1409               	bsf	9,0	;volatile
  1587                           
  1588                           ;Lab1.c: 66:     ANSEL = 0;
  1589     0199  1089               	bcf	9,1	;volatile
  1590     019A                     i1l963:
  1591                           
  1592                           ;Lab1.c: 69:     PORTA = 0;
  1593     019A  30F6               	movlw	246
  1594     019B  0081               	movwf	1	;volatile
  1595     019C                     i1l965:
  1596                           
  1597                           ;Lab1.c: 70:     TRISC = 0;
  1598     019C  110B               	bcf	11,2	;volatile
  1599     019D                     i1l87:
  1600     019D  0874               	movf	??_isr+2,w
  1601     019E  00FF               	movwf	btemp+1
  1602     019F  0873               	movf	??_isr+1,w
  1603     01A0  008A               	movwf	10
  1604     01A1  0E72               	swapf	??_isr,w
  1605     01A2  0083               	movwf	3
  1606     01A3  0EFE               	swapf	btemp,f
  1607     01A4  0E7E               	swapf	btemp,w
  1608     01A5  0009               	retfie
  1609     01A6                     __end_of_isr:
  1610                           
  1611                           	psect	intentry
  1612     0004                     __pintentry:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1615                           
  1616     0004                     interrupt_function:
  1617     007E                     saved_w	set	btemp
  1618     0004  00FE               	movwf	btemp
  1619     0005  0E03               	swapf	3,w
  1620     0006  00F2               	movwf	??_isr
  1621     0007  080A               	movf	10,w
  1622     0008  00F3               	movwf	??_isr+1
  1623     0009  087F               	movf	btemp+1,w
  1624     000A  00F4               	movwf	??_isr+2
  1625     000B  120A  118A  2981   	ljmp	_isr
  1626                           
  1627                           	psect	text8
  1628     015A                     __ptext8:	
  1629 ;; *************** function _ioc_portB *****************
  1630 ;; Defined at:
  1631 ;;		line 75 in file "Lab1.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 1
  1652 ;; This function calls:
  1653 ;;		_adc_sel_channel
  1654 ;; This function is called by:
  1655 ;;		_isr
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659     015A                     _ioc_portB:	
  1660                           ;psect for function _ioc_portB
  1661                           
  1662     015A                     i1l807:	
  1663                           ;incstack = 0
  1664                           ; Regs used in _ioc_portB: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1665                           
  1666                           
  1667                           ;Lab1.c: 76: 
  1668     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1669     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1670     015C  1806               	btfsc	6,0	;volatile
  1671     015D  295F               	goto	u7_21
  1672     015E  2960               	goto	u7_20
  1673     015F                     u7_21:
  1674     015F  2964               	goto	i1l811
  1675     0160                     u7_20:
  1676     0160                     i1l809:
  1677     0160  3001               	movlw	1
  1678     0161  00FF               	movwf	btemp+1
  1679     0162  087F               	movf	btemp+1,w
  1680     0163  0785               	addwf	5,f	;volatile
  1681     0164                     i1l811:
  1682                           
  1683                           ;Lab1.c: 77: 
  1684     0164  1886               	btfsc	6,1	;volatile
  1685     0165  2967               	goto	u8_21
  1686     0166  2968               	goto	u8_20
  1687     0167                     u8_21:
  1688     0167  296A               	goto	i1l815
  1689     0168                     u8_20:
  1690     0168                     i1l813:
  1691     0168  3001               	movlw	1
  1692     0169  0285               	subwf	5,f	;volatile
  1693     016A                     i1l815:
  1694                           
  1695                           ;Lab1.c: 78:     OSCCONbits.IRCF = 0b111;
  1696     016A  1906               	btfsc	6,2	;volatile
  1697     016B  296D               	goto	u9_21
  1698     016C  296E               	goto	u9_20
  1699     016D                     u9_21:
  1700     016D  2974               	goto	i1l819
  1701     016E                     u9_20:
  1702     016E                     i1l817:
  1703     016E  300D               	movlw	13
  1704     016F  120A  118A  21E8  120A  118A  	fcall	_adc_sel_channel
  1705     0174                     i1l819:
  1706                           
  1707                           ;Lab1.c: 79:     SCS = 1;
  1708     0174  1283               	bcf	3,5	;RP0=0, select bank0
  1709     0175  1303               	bcf	3,6	;RP1=0, select bank0
  1710     0176  1986               	btfsc	6,3	;volatile
  1711     0177  2979               	goto	u10_21
  1712     0178  297A               	goto	u10_20
  1713     0179                     u10_21:
  1714     0179  2980               	goto	i1l94
  1715     017A                     u10_20:
  1716     017A                     i1l821:
  1717     017A  300B               	movlw	11
  1718     017B  120A  118A  21E8  120A  118A  	fcall	_adc_sel_channel
  1719     0180                     i1l94:
  1720     0180  0008               	return
  1721     0181                     __end_of_ioc_portB:
  1722                           
  1723                           	psect	text9
  1724     01E8                     __ptext9:	
  1725 ;; *************** function _adc_sel_channel *****************
  1726 ;; Defined at:
  1727 ;;		line 49 in file "ADC_lib.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  channel         1    wreg     unsigned char 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  channel         1    1[COMMON] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         1       0       0       0       0
  1743 ;;      Temps:          1       0       0       0       0
  1744 ;;      Totals:         2       0       0       0       0
  1745 ;;Total ram usage:        2 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_ioc_portB
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754     01E8                     _adc_sel_channel:	
  1755                           ;psect for function _adc_sel_channel
  1756                           
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _adc_sel_channel: [wreg+status,2+status,0]
  1760                           ;adc_sel_channel@channel stored from wreg
  1761     01E8  00F1               	movwf	adc_sel_channel@channel
  1762     01E9                     i1l775:
  1763                           
  1764                           ;ADC_lib.c: 50:     ADCON0bits.CHS = channel;
  1765     01E9  0871               	movf	adc_sel_channel@channel,w
  1766     01EA  00F0               	movwf	??_adc_sel_channel
  1767     01EB  0DF0               	rlf	??_adc_sel_channel,f
  1768     01EC  0DF0               	rlf	??_adc_sel_channel,f
  1769     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1770     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1771     01EF  081F               	movf	31,w	;volatile
  1772     01F0  0670               	xorwf	??_adc_sel_channel,w
  1773     01F1  39C3               	andlw	-61
  1774     01F2  0670               	xorwf	??_adc_sel_channel,w
  1775     01F3  009F               	movwf	31	;volatile
  1776     01F4                     i1l156:
  1777     01F4  0008               	return
  1778     01F5                     __end_of_adc_sel_channel:
  1779     007E                     btemp	set	126	;btemp
  1780     007E                     wtemp0	set	126
  1781                           
  1782                           	psect	config
  1783                           
  1784                           ;Config register CONFIG1 @ 0x2007
  1785                           ;	Oscillator Selection bits
  1786                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1787                           ;	Watchdog Timer Enable bit
  1788                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1789                           ;	Power-up Timer Enable bit
  1790                           ;	PWRTE = OFF, PWRT disabled
  1791                           ;	RE3/MCLR pin function select bit
  1792                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1793                           ;	Code Protection bit
  1794                           ;	CP = OFF, Program memory code protection is disabled
  1795                           ;	Data Code Protection bit
  1796                           ;	CPD = OFF, Data memory code protection is disabled
  1797                           ;	Brown Out Reset Selection bits
  1798                           ;	BOREN = OFF, BOR disabled
  1799                           ;	Internal External Switchover bit
  1800                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1801                           ;	Fail-Safe Clock Monitor Enabled bit
  1802                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1803                           ;	Low Voltage Programming Enable bit
  1804                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1805                           ;	In-Circuit Debugger Mode bit
  1806                           ;	DEBUG = 0x1, unprogrammed default
  1807     2007                     	org	8199
  1808     2007  20D4               	dw	8404
  1809                           
  1810                           ;Config register CONFIG2 @ 0x2008
  1811                           ;	Brown-out Reset Selection bit
  1812                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1813                           ;	Flash Program Memory Self Write Enable bits
  1814                           ;	WRT = OFF, Write protection off
  1815     2008                     	org	8200
  1816     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     11      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_adc_init

Critical Paths under _isr in COMMON

    _ioc_portB->_adc_sel_channel

Critical Paths under _main in BANK0

    _main->_split_nibbles
    _setup->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     540
                                              7 BANK0      4     4      0
                           _adc_read
                        _hex_to_7seg
                              _setup
                      _split_nibbles
 ---------------------------------------------------------------------------------
 (1) _split_nibbles                                        9     7      2      90
                                              5 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     404
                           _adc_init
                          _iocb_init
 ---------------------------------------------------------------------------------
 (2) _iocb_init                                            1     1      0      66
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     338
                                              5 COMMON     4     1      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _hex_to_7seg                                          3     3      0      22
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              5 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              2 COMMON     3     3      0
                          _ioc_portB
 ---------------------------------------------------------------------------------
 (4) _ioc_portB                                            0     0      0      15
                    _adc_sel_channel
 ---------------------------------------------------------------------------------
 (5) _adc_sel_channel                                      2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_read
   _hex_to_7seg
   _setup
     _adc_init
     _iocb_init
   _split_nibbles

 _isr (ROOT)
   _ioc_portB
     _adc_sel_channel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 19 10:20:59 2023

                    l103 0114                      l124 01D9                      l109 0159  
                    l150 01DD                      l153 01E7                      l147 00CD  
                    l164 007A                      l183 01C6                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RE0 0048                      _RE1 0049  
                    u210 0097                      u211 0093                      u204 0090  
                    u230 01E1                      u231 01E0                      u224 009A  
                    u170 0083                      u250 0105                      u171 007F  
                    u251 0104                      u245 01AF                      u190 008D  
                    u191 0089                      u184 0086                      _SCS 0478  
                    _isr 0181             ?_hex_to_7seg 0070                     l1101 0158  
                   l1103 01DA                     l1111 01AC                     l1105 01E1  
                   l1041 007C                     l1033 01C8                     l1113 01B7  
                   l1201 00ED                     l1131 0026                     l1123 0022  
                   l1043 009B                     l1035 01CE                     l1211 010D  
                   l1203 00EF                     l1117 001F                     l1045 009E  
                   l1053 00AB                     l1037 01D3                     l1109 01A9  
                   l1205 00F8                     l1151 0030                     l1143 002C  
                   l1135 0028                     l1127 0024                     l1119 0020  
                   l1047 00A3                     l1055 00C3                     l1039 01D8  
                   l1071 0125                     l1063 011A                     l1207 0101  
                   l1057 00CC                     l1049 00A8                     l1081 0134  
                   l1073 0128                     l1065 011D                     l1209 0105  
                   l1171 003A                     l1163 0036                     l1155 0032  
                   l1147 002E                     l1139 002A                     l1091 014D  
                   l1083 0137                     l1075 012B                     l1067 011F  
                   l1253 00B5                     l1093 014E                     l1085 013B  
                   l1077 012E                     l1069 0122                     l1255 0048  
                   l1175 003C                     l1167 0038                     l1159 0034  
                   l1095 014F                     l1087 013C                     l1079 0131  
                   l1191 00CE                     l1185 0040                     l1097 0153  
                   l1089 0142                     l1193 00D3                     l1179 003E  
                   l1099 0154                     l1195 00D6                     l1197 00DF  
                   l1199 00EB                     _ADFM 04FF                     ?_isr 0070  
                   _ADON 00F8                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 040D                     _IOCB 0096                     _RBIE 005B  
                   _RBIF 0058                     i1l85 0198                     i1l94 0180  
                   i1l87 019D                     _TMR0 0001                     _WPUB 0095  
                   u7_20 0160                     u7_21 015F                     u8_20 0168  
                   u8_21 0167                     u9_20 016E                     u9_21 016D  
                   _main 00CE                     btemp 007E                     start 000E  
 adc_sel_channel@channel 0071                    ??_isr 0072            _split_nibbles 01A6  
                  ?_main 0070                    _ANSEL 0188                    i1l156 01F4  
                  i1l811 0164                    i1l821 017A                    i1l813 0168  
                  i1l815 016A                    i1l807 015A                    i1l817 016E  
                  i1l809 0160                    i1l819 0174                    i1l775 01E9  
                  i1l951 0181                    i1l961 0195                    i1l953 0185  
                  i1l963 019A                    i1l955 018A                    i1l965 019C  
                  i1l957 018B                    i1l959 018F                    _VCFG0 04FC  
                  _VCFG1 04FD                    u10_20 017A                    u10_21 0179  
                  u13_20 0185                    u13_21 0184                    u14_20 018F  
                  u14_21 018E                    u15_20 0195                    u15_21 0194  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _nRBPU 040F                    _disp1 002E                    _disp2 002D  
                  _setup 011A                    pclath 000A         ?_adc_sel_channel 0070  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 011A           ?_split_nibbles 0075                   ??_main 0027  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_init 00CE         __end_of_adc_read 01E8  
                 saved_w 007E     split_nibbles@low_nib 0025  __end_of__initialization 001A  
        ??_split_nibbles 0020           __pcstackCOMMON 0070            __end_of_setup 015A  
         _OPTION_REGbits 0081                  ??_setup 0079               __pbssBANK0 002B  
             __pmaintext 00CE               __pintentry 0004                ?_adc_init 0075  
              ?_adc_read 0075         split_nibbles@hex 0026                  _adc_val 0031  
      __end_of_iocb_init 01DA        __end_of_ioc_portB 0181               ??_adc_init 0020  
             ??_adc_read 0077                  __ptext1 01A6                  __ptext2 011A  
                __ptext3 01C7                  __ptext4 007B                  __ptext5 001E  
                __ptext6 01DA                  __ptext7 0181                  __ptext8 015A  
                __ptext9 01E8                  _nibbles 002B                  _low_nib 002F  
   end_of_initialization 001A    split_nibbles@high_nib 0024      start_initialization 0011  
          ??_hex_to_7seg 0075              __end_of_isr 01A6    __end_of_split_nibbles 01C7  
        adc_init@channel 0077        ??_adc_sel_channel 0070                ___latbits 0002  
          __pcstackBANK0 0020      __end_of_hex_to_7seg 007B            adc_init@clock 0076  
              adc_init@J 0078                adc_init@R 0075                _iocb_init 01C7  
              _ioc_portB 015A        interrupt_function 0004               _ADCON0bits 001F  
             ?_iocb_init 0070               ?_ioc_portB 0070              _hex_to_7seg 001E  
        iocb_init@pinesB 0075                 _adc_init 007B                 _adc_read 01DA  
               _main$154 0029           hex_to_7seg@hex 0077                 _high_nib 0030  
        _adc_sel_channel 01E8              ??_iocb_init 0075              ??_ioc_portB 0072  
               intlevel1 0000               _OSCCONbits 008F  __end_of_adc_sel_channel 01F5  
