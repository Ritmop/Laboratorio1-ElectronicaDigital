

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 19 11:30:54 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 22/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     008F                     	;# 
   104     0090                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     0105                     	;# 
   123     0107                     	;# 
   124     0108                     	;# 
   125     0109                     	;# 
   126     010C                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     0185                     	;# 
   132     0187                     	;# 
   133     0188                     	;# 
   134     0189                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008F                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0095                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009C                     	;# 
   197     009D                     	;# 
   198     009E                     	;# 
   199     009F                     	;# 
   200     0105                     	;# 
   201     0107                     	;# 
   202     0108                     	;# 
   203     0109                     	;# 
   204     010C                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0185                     	;# 
   210     0187                     	;# 
   211     0188                     	;# 
   212     0189                     	;# 
   213     018C                     	;# 
   214     018D                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000D                     	;# 
   229     000E                     	;# 
   230     000E                     	;# 
   231     000F                     	;# 
   232     0010                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0015                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001B                     	;# 
   246     001C                     	;# 
   247     001D                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     0081                     	;# 
   251     0085                     	;# 
   252     0086                     	;# 
   253     0087                     	;# 
   254     0088                     	;# 
   255     0089                     	;# 
   256     008C                     	;# 
   257     008D                     	;# 
   258     008E                     	;# 
   259     008F                     	;# 
   260     0090                     	;# 
   261     0091                     	;# 
   262     0092                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0094                     	;# 
   267     0095                     	;# 
   268     0096                     	;# 
   269     0097                     	;# 
   270     0098                     	;# 
   271     0099                     	;# 
   272     009A                     	;# 
   273     009B                     	;# 
   274     009C                     	;# 
   275     009D                     	;# 
   276     009E                     	;# 
   277     009F                     	;# 
   278     0105                     	;# 
   279     0107                     	;# 
   280     0108                     	;# 
   281     0109                     	;# 
   282     010C                     	;# 
   283     010C                     	;# 
   284     010D                     	;# 
   285     010E                     	;# 
   286     010F                     	;# 
   287     0185                     	;# 
   288     0187                     	;# 
   289     0188                     	;# 
   290     0189                     	;# 
   291     018C                     	;# 
   292     018D                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     000D                     	;# 
   307     000E                     	;# 
   308     000E                     	;# 
   309     000F                     	;# 
   310     0010                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0014                     	;# 
   315     0015                     	;# 
   316     0015                     	;# 
   317     0016                     	;# 
   318     0017                     	;# 
   319     0018                     	;# 
   320     0019                     	;# 
   321     001A                     	;# 
   322     001B                     	;# 
   323     001B                     	;# 
   324     001C                     	;# 
   325     001D                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     0081                     	;# 
   329     0085                     	;# 
   330     0086                     	;# 
   331     0087                     	;# 
   332     0088                     	;# 
   333     0089                     	;# 
   334     008C                     	;# 
   335     008D                     	;# 
   336     008E                     	;# 
   337     008F                     	;# 
   338     0090                     	;# 
   339     0091                     	;# 
   340     0092                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0094                     	;# 
   345     0095                     	;# 
   346     0096                     	;# 
   347     0097                     	;# 
   348     0098                     	;# 
   349     0099                     	;# 
   350     009A                     	;# 
   351     009B                     	;# 
   352     009C                     	;# 
   353     009D                     	;# 
   354     009E                     	;# 
   355     009F                     	;# 
   356     0105                     	;# 
   357     0107                     	;# 
   358     0108                     	;# 
   359     0109                     	;# 
   360     010C                     	;# 
   361     010C                     	;# 
   362     010D                     	;# 
   363     010E                     	;# 
   364     010F                     	;# 
   365     0185                     	;# 
   366     0187                     	;# 
   367     0188                     	;# 
   368     0189                     	;# 
   369     018C                     	;# 
   370     018D                     	;# 
   371     0000                     	;# 
   372     0001                     	;# 
   373     0002                     	;# 
   374     0003                     	;# 
   375     0004                     	;# 
   376     0005                     	;# 
   377     0006                     	;# 
   378     0007                     	;# 
   379     0008                     	;# 
   380     0009                     	;# 
   381     000A                     	;# 
   382     000B                     	;# 
   383     000C                     	;# 
   384     000D                     	;# 
   385     000E                     	;# 
   386     000E                     	;# 
   387     000F                     	;# 
   388     0010                     	;# 
   389     0011                     	;# 
   390     0012                     	;# 
   391     0013                     	;# 
   392     0014                     	;# 
   393     0015                     	;# 
   394     0015                     	;# 
   395     0016                     	;# 
   396     0017                     	;# 
   397     0018                     	;# 
   398     0019                     	;# 
   399     001A                     	;# 
   400     001B                     	;# 
   401     001B                     	;# 
   402     001C                     	;# 
   403     001D                     	;# 
   404     001E                     	;# 
   405     001F                     	;# 
   406     0081                     	;# 
   407     0085                     	;# 
   408     0086                     	;# 
   409     0087                     	;# 
   410     0088                     	;# 
   411     0089                     	;# 
   412     008C                     	;# 
   413     008D                     	;# 
   414     008E                     	;# 
   415     008F                     	;# 
   416     0090                     	;# 
   417     0091                     	;# 
   418     0092                     	;# 
   419     0093                     	;# 
   420     0093                     	;# 
   421     0093                     	;# 
   422     0094                     	;# 
   423     0095                     	;# 
   424     0096                     	;# 
   425     0097                     	;# 
   426     0098                     	;# 
   427     0099                     	;# 
   428     009A                     	;# 
   429     009B                     	;# 
   430     009C                     	;# 
   431     009D                     	;# 
   432     009E                     	;# 
   433     009F                     	;# 
   434     0105                     	;# 
   435     0107                     	;# 
   436     0108                     	;# 
   437     0109                     	;# 
   438     010C                     	;# 
   439     010C                     	;# 
   440     010D                     	;# 
   441     010E                     	;# 
   442     010F                     	;# 
   443     0185                     	;# 
   444     0187                     	;# 
   445     0188                     	;# 
   446     0189                     	;# 
   447     018C                     	;# 
   448     018D                     	;# 
   449     001E                     _ADRESH	set	30
   450     001F                     _ADCON0bits	set	31
   451     0009                     _PORTE	set	9
   452     0008                     _PORTD	set	8
   453     0007                     _PORTC	set	7
   454     0005                     _PORTA	set	5
   455     0001                     _TMR0	set	1
   456     00F8                     _ADON	set	248
   457     005B                     _RBIE	set	91
   458     004A                     _RE2	set	74
   459     0049                     _RE1	set	73
   460     0048                     _RE0	set	72
   461     005D                     _T0IE	set	93
   462     005F                     _GIE	set	95
   463     0033                     _RB3	set	51
   464     0032                     _RB2	set	50
   465     0031                     _RB1	set	49
   466     0030                     _RB0	set	48
   467     0058                     _RBIF	set	88
   468     005A                     _T0IF	set	90
   469     009E                     _ADRESL	set	158
   470     0096                     _IOCB	set	150
   471     0095                     _WPUB	set	149
   472     0086                     _TRISB	set	134
   473     0081                     _OPTION_REGbits	set	129
   474     008F                     _OSCCONbits	set	143
   475     0089                     _TRISE	set	137
   476     0088                     _TRISD	set	136
   477     0087                     _TRISC	set	135
   478     0085                     _TRISA	set	133
   479     04FD                     _VCFG1	set	1277
   480     04FC                     _VCFG0	set	1276
   481     04FF                     _ADFM	set	1279
   482     040F                     _nRBPU	set	1039
   483     040D                     _T0CS	set	1037
   484     0478                     _SCS	set	1144
   485     0189                     _ANSELH	set	393
   486     0188                     _ANSEL	set	392
   487                           
   488                           	psect	cinit
   489     0011                     start_initialization:	
   490                           ; #config settings
   491                           
   492     0011                     __initialization:
   493                           
   494                           ; Clear objects allocated to COMMON
   495     0011  01F0               	clrf	__pbssCOMMON& (0+127)
   496     0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   497     0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   498     0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   499     0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502     0016  1283               	bcf	3,5	;RP0=0, select bank0
   503     0017  1303               	bcf	3,6	;RP1=0, select bank0
   504     0018  01A9               	clrf	__pbssBANK0& (0+127)
   505     0019  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   506     001A  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   507     001B                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510     001B                     __end_of__initialization:
   511     001B  0183               	clrf	3
   512     001C  120A  118A  291A   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMMON
   515     0070                     __pbssCOMMON:
   516     0070                     _disp2:
   517     0070                     	ds	1
   518     0071                     _disp1:
   519     0071                     	ds	1
   520     0072                     _low_nib:
   521     0072                     	ds	1
   522     0073                     _high_nib:
   523     0073                     	ds	1
   524     0074                     _adc_val:
   525     0074                     	ds	1
   526                           
   527                           	psect	bssBANK0
   528     0029                     __pbssBANK0:
   529     0029                     _nibbles:
   530     0029                     	ds	2
   531     002B                     _dispSel:
   532     002B                     	ds	1
   533                           
   534                           	psect	cstackCOMMON
   535     0075                     __pcstackCOMMON:
   536     0075                     ?_ioc_portB:
   537     0075                     ?_adc_sel_channel:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0075                     ??_adc_sel_channel:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0075                     ?_setup:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0075                     ?_hex_to_7seg:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0075                     ?_multiplex:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0075                     ?_iocb_init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0075                     ?_isr:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0075                     ?_main:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 2 bytes @ 0x0
   563     0075                     	ds	1
   564     0076                     adc_sel_channel@channel:
   565                           
   566                           ; 1 bytes @ 0x1
   567     0076                     	ds	1
   568     0077                     ??_ioc_portB:
   569     0077                     ??_isr:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 1 bytes @ 0x2
   574     0077                     	ds	3
   575                           
   576                           	psect	cstackBANK0
   577     0020                     __pcstackBANK0:
   578     0020                     ??_hex_to_7seg:
   579     0020                     ??_multiplex:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0020                     ?_alarm:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0020                     ??_iocb_init:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0020                     ?_adc_init:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0020                     ?_adc_read:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0020                     ?_split_nibbles:	
   595                           ; 2 bytes @ 0x0
   596                           
   597     0020                     multiplex@selector:	
   598                           ; 2 bytes @ 0x0
   599                           
   600     0020                     alarm@var:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0020                     iocb_init@pinesB:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0020                     adc_init@R:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 1 bytes @ 0x0
   611     0020                     	ds	1
   612     0021                     ??_alarm:
   613     0021                     alarm@ref:	
   614                           ; 1 bytes @ 0x1
   615                           
   616     0021                     adc_init@clock:	
   617                           ; 1 bytes @ 0x1
   618                           
   619                           
   620                           ; 1 bytes @ 0x1
   621     0021                     	ds	1
   622     0022                     ??_adc_read:
   623     0022                     ??_split_nibbles:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0022                     adc_init@channel:	
   627                           ; 1 bytes @ 0x2
   628                           
   629     0022                     hex_to_7seg@hex:	
   630                           ; 1 bytes @ 0x2
   631                           
   632                           
   633                           ; 1 bytes @ 0x2
   634     0022                     	ds	1
   635     0023                     ??_adc_init:
   636                           
   637                           ; 1 bytes @ 0x3
   638     0023                     	ds	2
   639     0025                     adc_init@J:
   640                           
   641                           ; 1 bytes @ 0x5
   642     0025                     	ds	1
   643     0026                     ??_setup:
   644     0026                     split_nibbles@high_nib:	
   645                           ; 1 bytes @ 0x6
   646                           
   647                           
   648                           ; 1 bytes @ 0x6
   649     0026                     	ds	1
   650     0027                     split_nibbles@low_nib:
   651                           
   652                           ; 1 bytes @ 0x7
   653     0027                     	ds	1
   654     0028                     split_nibbles@hex:
   655                           
   656                           ; 1 bytes @ 0x8
   657     0028                     	ds	1
   658     0029                     ??_main:
   659                           
   660                           	psect	maintext
   661     011A                     __pmaintext:	
   662                           ; 1 bytes @ 0x9
   663 ;;
   664 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   665 ;;
   666 ;; *************** function _main *****************
   667 ;; Defined at:
   668 ;;		line 83 in file "Lab1.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  2  104[None  ] int 
   675 ;; Registers used:
   676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : B00/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         0       0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels required when called: 5
   688 ;; This function calls:
   689 ;;		_adc_read
   690 ;;		_alarm
   691 ;;		_hex_to_7seg
   692 ;;		_multiplex
   693 ;;		_setup
   694 ;;		_split_nibbles
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700     011A                     _main:	
   701                           ;psect for function _main
   702                           
   703     011A                     l1489:	
   704                           ;incstack = 0
   705                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   706                           
   707                           
   708                           ;Lab1.c: 84:     T0IE = 1;
   709     011A  120A  118A  20D7  120A  118A  	fcall	_setup
   710     011F                     l1491:
   711                           
   712                           ;Lab1.c: 88:     T0IF = 0;
   713     011F  120A  118A  21F2  120A  118A  	fcall	_adc_read
   714     0124  1283               	bcf	3,5	;RP0=0, select bank0
   715     0125  1303               	bcf	3,6	;RP1=0, select bank0
   716     0126  0821               	movf	?_adc_read+1,w
   717     0127  00F4               	movwf	_adc_val
   718     0128                     l1493:
   719                           
   720                           ;Lab1.c: 89: }
   721     0128  0874               	movf	_adc_val,w
   722     0129  120A  118A  2183  120A  118A  	fcall	_split_nibbles
   723     012E  1283               	bcf	3,5	;RP0=0, select bank0
   724     012F  1303               	bcf	3,6	;RP1=0, select bank0
   725     0130  0821               	movf	?_split_nibbles+1,w
   726     0131  00AA               	movwf	_nibbles+1
   727     0132  0820               	movf	?_split_nibbles,w
   728     0133  00A9               	movwf	_nibbles
   729     0134                     l1495:
   730                           
   731                           ;Lab1.c: 90: 
   732     0134  0829               	movf	_nibbles,w
   733     0135  00F2               	movwf	_low_nib
   734     0136                     l1497:
   735                           
   736                           ;Lab1.c: 91: void multiplex(uint8_t selector){
   737     0136  082A               	movf	_nibbles+1,w
   738     0137  00F3               	movwf	_high_nib
   739     0138                     l1499:
   740                           
   741                           ;Lab1.c: 92:     if(selector & 0x01 == 1){
   742     0138  0872               	movf	_low_nib,w
   743     0139  120A  118A  201F  120A  118A  	fcall	_hex_to_7seg
   744     013E  00F0               	movwf	_disp2
   745     013F                     l1501:
   746                           
   747                           ;Lab1.c: 93:             RE0 = 0;
   748     013F  0873               	movf	_high_nib,w
   749     0140  120A  118A  201F  120A  118A  	fcall	_hex_to_7seg
   750     0145  00F1               	movwf	_disp1
   751     0146                     l1503:
   752                           
   753                           ;Lab1.c: 94:             PORTD = disp2;
   754     0146  1283               	bcf	3,5	;RP0=0, select bank0
   755     0147  1303               	bcf	3,6	;RP1=0, select bank0
   756     0148  082B               	movf	_dispSel,w
   757     0149  120A  118A  21E1  120A  118A  	fcall	_multiplex
   758     014E                     l1505:
   759                           
   760                           ;Lab1.c: 96:         }
   761     014E  0874               	movf	_adc_val,w
   762     014F  1283               	bcf	3,5	;RP0=0, select bank0
   763     0150  1303               	bcf	3,6	;RP1=0, select bank0
   764     0151  00A0               	movwf	alarm@var
   765     0152  0805               	movf	5,w	;volatile
   766     0153  120A  118A  2202  120A  118A  	fcall	_alarm
   767     0158  291F               	goto	l1491
   768     0159  120A  118A  280E   	ljmp	start
   769     015C                     __end_of_main:
   770                           
   771                           	psect	text1
   772     0183                     __ptext1:	
   773 ;; *************** function _split_nibbles *****************
   774 ;; Defined at:
   775 ;;		line 59 in file "disp_7seg.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  hex             1    wreg     unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  hex             1    8[BANK0 ] unsigned char 
   780 ;;  low_nib         1    7[BANK0 ] unsigned char 
   781 ;;  high_nib        1    6[BANK0 ] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2    0[BANK0 ] unsigned int 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, btemp+1
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       2       0       0       0
   792 ;;      Locals:         0       3       0       0       0
   793 ;;      Temps:          0       4       0       0       0
   794 ;;      Totals:         0       9       0       0       0
   795 ;;Total ram usage:        9 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 3
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805     0183                     _split_nibbles:	
   806                           ;psect for function _split_nibbles
   807                           
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _split_nibbles: [wreg+status,2+status,0+btemp+1]
   811                           ;split_nibbles@hex stored from wreg
   812     0183  1283               	bcf	3,5	;RP0=0, select bank0
   813     0184  1303               	bcf	3,6	;RP1=0, select bank0
   814     0185  00A8               	movwf	split_nibbles@hex
   815     0186                     l1389:
   816                           
   817                           ;disp_7seg.c: 60:     uint8_t high_nib;;disp_7seg.c: 61:     uint8_t low_nib;;disp_7seg.
      +                          c: 62:     low_nib = hex & 0x0F;
   818     0186  0828               	movf	split_nibbles@hex,w
   819     0187  390F               	andlw	15
   820     0188  00A7               	movwf	split_nibbles@low_nib
   821     0189                     l1391:
   822                           
   823                           ;disp_7seg.c: 63:     high_nib = hex>>4 & 0x0F;
   824     0189  0828               	movf	split_nibbles@hex,w
   825     018A  00A2               	movwf	??_split_nibbles
   826     018B  3004               	movlw	4
   827     018C                     u405:
   828     018C  1003               	clrc
   829     018D  0CA2               	rrf	??_split_nibbles,f
   830     018E  3EFF               	addlw	-1
   831     018F  1D03               	skipz
   832     0190  298C               	goto	u405
   833     0191  0822               	movf	??_split_nibbles,w
   834     0192  390F               	andlw	15
   835     0193  00A6               	movwf	split_nibbles@high_nib
   836     0194                     l1393:
   837                           
   838                           ;disp_7seg.c: 64:     return high_nib<<8 | low_nib;
   839     0194  0827               	movf	split_nibbles@low_nib,w
   840     0195  00A2               	movwf	??_split_nibbles
   841     0196  01A3               	clrf	??_split_nibbles+1
   842     0197  0826               	movf	split_nibbles@high_nib,w
   843     0198  00A4               	movwf	??_split_nibbles+2
   844     0199  01A5               	clrf	??_split_nibbles+3
   845     019A  0824               	movf	??_split_nibbles+2,w
   846     019B  00A5               	movwf	??_split_nibbles+3
   847     019C  01A4               	clrf	??_split_nibbles+2
   848     019D  0822               	movf	??_split_nibbles,w
   849     019E  0424               	iorwf	??_split_nibbles+2,w
   850     019F  00A0               	movwf	?_split_nibbles
   851     01A0  0823               	movf	??_split_nibbles+1,w
   852     01A1  0425               	iorwf	??_split_nibbles+3,w
   853     01A2  00A1               	movwf	?_split_nibbles+1
   854     01A3                     l195:
   855     01A3  0008               	return
   856     01A4                     __end_of_split_nibbles:
   857                           
   858                           	psect	text2
   859     00D7                     __ptext2:	
   860 ;; *************** function _setup *****************
   861 ;; Defined at:
   862 ;;		line 100 in file "Lab1.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 4
   883 ;; This function calls:
   884 ;;		_adc_init
   885 ;;		_iocb_init
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891     00D7                     _setup:	
   892                           ;psect for function _setup
   893                           
   894     00D7                     l1345:	
   895                           ;incstack = 0
   896                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   897                           
   898                           
   899                           ;Lab1.c: 102: }
   900     00D7  1683               	bsf	3,5	;RP0=1, select bank3
   901     00D8  1703               	bsf	3,6	;RP1=1, select bank3
   902     00D9  0188               	clrf	8	;volatile
   903     00DA                     l1347:
   904                           
   905                           ;Lab1.c: 103: 
   906     00DA  3028               	movlw	40
   907     00DB  0089               	movwf	9	;volatile
   908     00DC                     l1349:
   909                           
   910                           ;Lab1.c: 104: void alarm(uint8_t ref,uint8_t var){
   911     00DC  1683               	bsf	3,5	;RP0=1, select bank1
   912     00DD  1303               	bcf	3,6	;RP1=0, select bank1
   913     00DE  0185               	clrf	5	;volatile
   914                           
   915                           ;Lab1.c: 105:     if(var >= ref) RE2 = 1;
   916     00DF  307F               	movlw	127
   917     00E0  1283               	bcf	3,5	;RP0=0, select bank0
   918     00E1  1303               	bcf	3,6	;RP1=0, select bank0
   919     00E2  0085               	movwf	5	;volatile
   920     00E3                     l1351:
   921                           
   922                           ;Lab1.c: 106:     else RE2 = 0;
   923     00E3  1683               	bsf	3,5	;RP0=1, select bank1
   924     00E4  1303               	bcf	3,6	;RP1=0, select bank1
   925     00E5  0187               	clrf	7	;volatile
   926     00E6                     l1353:
   927                           
   928                           ;Lab1.c: 107: }
   929     00E6  1283               	bcf	3,5	;RP0=0, select bank0
   930     00E7  1303               	bcf	3,6	;RP1=0, select bank0
   931     00E8  0187               	clrf	7	;volatile
   932     00E9                     l1355:
   933     00E9  1683               	bsf	3,5	;RP0=1, select bank1
   934     00EA  1303               	bcf	3,6	;RP1=0, select bank1
   935     00EB  0188               	clrf	8	;volatile
   936     00EC                     l1357:
   937     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   938     00ED  1303               	bcf	3,6	;RP1=0, select bank0
   939     00EE  0188               	clrf	8	;volatile
   940     00EF                     l1359:
   941     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   942     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   943     00F1  0189               	clrf	9	;volatile
   944     00F2                     l1361:
   945     00F2  1283               	bcf	3,5	;RP0=0, select bank0
   946     00F3  1303               	bcf	3,6	;RP1=0, select bank0
   947     00F4  0189               	clrf	9	;volatile
   948     00F5                     l1363:
   949     00F5  3070               	movlw	112
   950     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   951     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   952     00F8  048F               	iorwf	15,f	;volatile
   953     00F9                     l1365:
   954     00F9  140F               	bsf	15,0	;volatile
   955     00FA                     l1367:
   956     00FA  300F               	movlw	15
   957     00FB  120A  118A  21C4  120A  118A  	fcall	_iocb_init
   958     0100                     l1369:
   959     0100  1283               	bcf	3,5	;RP0=0, select bank0
   960     0101  1303               	bcf	3,6	;RP1=0, select bank0
   961     0102  01A0               	clrf	adc_init@R
   962     0103  3008               	movlw	8
   963     0104  00A1               	movwf	adc_init@clock
   964     0105  300D               	movlw	13
   965     0106  00A2               	movwf	adc_init@channel
   966     0107  3000               	movlw	0
   967     0108  120A  118A  207E  120A  118A  	fcall	_adc_init
   968     010D                     l1371:
   969     010D  178B               	bsf	11,7	;volatile
   970     010E                     l1373:
   971     010E  168B               	bsf	11,5	;volatile
   972     010F                     l1375:
   973     010F  30F8               	movlw	-8
   974     0110  1683               	bsf	3,5	;RP0=1, select bank1
   975     0111  1303               	bcf	3,6	;RP1=0, select bank1
   976     0112  0581               	andwf	1,f	;volatile
   977     0113                     l1377:
   978     0113  1281               	bcf	1,5	;volatile
   979     0114                     l1379:
   980     0114  3064               	movlw	100
   981     0115  1283               	bcf	3,5	;RP0=0, select bank0
   982     0116  1303               	bcf	3,6	;RP1=0, select bank0
   983     0117  0081               	movwf	1	;volatile
   984     0118                     l1381:
   985     0118  110B               	bcf	11,2	;volatile
   986     0119                     l111:
   987     0119  0008               	return
   988     011A                     __end_of_setup:
   989                           
   990                           	psect	text3
   991     01C4                     __ptext3:	
   992 ;; *************** function _iocb_init *****************
   993 ;; Defined at:
   994 ;;		line 4 in file "iocb_init.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  pinesB          1    wreg     unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  pinesB          1    0[BANK0 ] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, btemp+1
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       1       0       0       0
  1010 ;;      Temps:          0       0       0       0       0
  1011 ;;      Totals:         0       1       0       0       0
  1012 ;;Total ram usage:        1 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 3
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_setup
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022     01C4                     _iocb_init:	
  1023                           ;psect for function _iocb_init
  1024                           
  1025                           
  1026                           ;incstack = 0
  1027                           ; Regs used in _iocb_init: [wreg+status,2+status,0+btemp+1]
  1028                           ;iocb_init@pinesB stored from wreg
  1029     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1030     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1031     01C6  00A0               	movwf	iocb_init@pinesB
  1032     01C7                     l1315:
  1033                           
  1034                           ;iocb_init.c: 5:     TRISB |= pinesB;
  1035     01C7  0820               	movf	iocb_init@pinesB,w	;volatile
  1036     01C8  00FF               	movwf	btemp+1
  1037     01C9  087F               	movf	btemp+1,w
  1038     01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1039     01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1040     01CC  0486               	iorwf	6,f	;volatile
  1041     01CD                     l1317:
  1042                           
  1043                           ;iocb_init.c: 6:     nRBPU = 0;
  1044     01CD  1381               	bcf	1,7	;volatile
  1045                           
  1046                           ;iocb_init.c: 7:     WPUB |= pinesB;
  1047     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1048     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1049     01D0  0820               	movf	iocb_init@pinesB,w	;volatile
  1050     01D1  00FF               	movwf	btemp+1
  1051     01D2  087F               	movf	btemp+1,w
  1052     01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1053     01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1054     01D5  0495               	iorwf	21,f	;volatile
  1055     01D6                     l1319:
  1056                           
  1057                           ;iocb_init.c: 8:     RBIE = 1;
  1058     01D6  158B               	bsf	11,3	;volatile
  1059                           
  1060                           ;iocb_init.c: 9:     IOCB |= pinesB;
  1061     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1062     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1063     01D9  0820               	movf	iocb_init@pinesB,w	;volatile
  1064     01DA  00FF               	movwf	btemp+1
  1065     01DB  087F               	movf	btemp+1,w
  1066     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1067     01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1068     01DE  0496               	iorwf	22,f	;volatile
  1069     01DF                     l1321:
  1070                           
  1071                           ;iocb_init.c: 10:     GIE = 1;
  1072     01DF  178B               	bsf	11,7	;volatile
  1073     01E0                     l136:
  1074     01E0  0008               	return
  1075     01E1                     __end_of_iocb_init:
  1076                           
  1077                           	psect	text4
  1078     007E                     __ptext4:	
  1079 ;; *************** function _adc_init *****************
  1080 ;; Defined at:
  1081 ;;		line 4 in file "ADC_lib.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  J               1    wreg     unsigned char 
  1084 ;;  R               1    0[BANK0 ] unsigned char 
  1085 ;;  clock           1    1[BANK0 ] unsigned char 
  1086 ;;  channel         1    2[BANK0 ] unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  J               1    5[BANK0 ] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       3       0       0       0
  1099 ;;      Locals:         0       1       0       0       0
  1100 ;;      Temps:          0       2       0       0       0
  1101 ;;      Totals:         0       6       0       0       0
  1102 ;;Total ram usage:        6 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 3
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_setup
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112     007E                     _adc_init:	
  1113                           ;psect for function _adc_init
  1114                           
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1118                           ;adc_init@J stored from wreg
  1119     007E  1283               	bcf	3,5	;RP0=0, select bank0
  1120     007F  1303               	bcf	3,6	;RP1=0, select bank0
  1121     0080  00A5               	movwf	adc_init@J
  1122     0081                     l1323:
  1123                           
  1124                           ;ADC_lib.c: 13:     ADFM = J;
  1125     0081  1825               	btfsc	adc_init@J,0
  1126     0082  2884               	goto	u331
  1127     0083  2888               	goto	u330
  1128     0084                     u331:
  1129     0084  1683               	bsf	3,5	;RP0=1, select bank1
  1130     0085  1303               	bcf	3,6	;RP1=0, select bank1
  1131     0086  179F               	bsf	31,7	;volatile
  1132     0087  288B               	goto	u344
  1133     0088                     u330:
  1134     0088  1683               	bsf	3,5	;RP0=1, select bank1
  1135     0089  1303               	bcf	3,6	;RP1=0, select bank1
  1136     008A  139F               	bcf	31,7	;volatile
  1137     008B                     u344:
  1138                           
  1139                           ;ADC_lib.c: 14:     VCFG0 = R;
  1140     008B  1283               	bcf	3,5	;RP0=0, select bank0
  1141     008C  1303               	bcf	3,6	;RP1=0, select bank0
  1142     008D  1820               	btfsc	adc_init@R,0
  1143     008E  2890               	goto	u351
  1144     008F  2894               	goto	u350
  1145     0090                     u351:
  1146     0090  1683               	bsf	3,5	;RP0=1, select bank1
  1147     0091  1303               	bcf	3,6	;RP1=0, select bank1
  1148     0092  161F               	bsf	31,4	;volatile
  1149     0093  2897               	goto	u364
  1150     0094                     u350:
  1151     0094  1683               	bsf	3,5	;RP0=1, select bank1
  1152     0095  1303               	bcf	3,6	;RP1=0, select bank1
  1153     0096  121F               	bcf	31,4	;volatile
  1154     0097                     u364:
  1155                           
  1156                           ;ADC_lib.c: 15:     VCFG1 = R;
  1157     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0099  1820               	btfsc	adc_init@R,0
  1160     009A  289C               	goto	u371
  1161     009B  28A0               	goto	u370
  1162     009C                     u371:
  1163     009C  1683               	bsf	3,5	;RP0=1, select bank1
  1164     009D  1303               	bcf	3,6	;RP1=0, select bank1
  1165     009E  169F               	bsf	31,5	;volatile
  1166     009F  28A3               	goto	u384
  1167     00A0                     u370:
  1168     00A0  1683               	bsf	3,5	;RP0=1, select bank1
  1169     00A1  1303               	bcf	3,6	;RP1=0, select bank1
  1170     00A2  129F               	bcf	31,5	;volatile
  1171     00A3                     u384:
  1172                           
  1173                           ;ADC_lib.c: 17:     switch(clock){
  1174     00A3  28B4               	goto	l1335
  1175     00A4                     l1325:
  1176                           
  1177                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
  1178     00A4  303F               	movlw	-193
  1179     00A5  059F               	andwf	31,f	;volatile
  1180                           
  1181                           ;ADC_lib.c: 21:             break;
  1182     00A6  28CC               	goto	l1337
  1183     00A7                     l1327:
  1184                           
  1185                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
  1186     00A7  081F               	movf	31,w	;volatile
  1187     00A8  393F               	andlw	-193
  1188     00A9  3840               	iorlw	64
  1189     00AA  009F               	movwf	31	;volatile
  1190                           
  1191                           ;ADC_lib.c: 25:             break;
  1192     00AB  28CC               	goto	l1337
  1193     00AC                     l1329:
  1194                           
  1195                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
  1196     00AC  081F               	movf	31,w	;volatile
  1197     00AD  393F               	andlw	-193
  1198     00AE  3880               	iorlw	128
  1199     00AF  009F               	movwf	31	;volatile
  1200                           
  1201                           ;ADC_lib.c: 29:             break;
  1202     00B0  28CC               	goto	l1337
  1203     00B1                     l1331:
  1204                           
  1205                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
  1206     00B1  30C0               	movlw	192
  1207     00B2  049F               	iorwf	31,f	;volatile
  1208                           
  1209                           ;ADC_lib.c: 33:             break;
  1210     00B3  28CC               	goto	l1337
  1211     00B4                     l1335:
  1212     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1213     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1214     00B6  0821               	movf	adc_init@clock,w
  1215     00B7  00A3               	movwf	??_adc_init
  1216     00B8  01A4               	clrf	??_adc_init+1
  1217                           
  1218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 1, Range of values is 0 to 0
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte            4     3 (average)
  1224                           ; direct_byte           11     8 (fixed)
  1225                           ; jumptable            260     6 (fixed)
  1226                           ;	Chosen strategy is simple_byte
  1227     00B9  0824               	movf	??_adc_init+1,w
  1228     00BA  3A00               	xorlw	0	; case 0
  1229     00BB  1903               	skipnz
  1230     00BC  28BE               	goto	l1557
  1231     00BD  28CC               	goto	l1337
  1232     00BE                     l1557:
  1233                           
  1234                           ; Switch size 1, requested type "simple"
  1235                           ; Number of cases is 4, Range of values is 1 to 20
  1236                           ; switch strategies available:
  1237                           ; Name         Instructions Cycles
  1238                           ; simple_byte           13     7 (average)
  1239                           ; direct_byte           71    11 (fixed)
  1240                           ; jumptable            263     9 (fixed)
  1241                           ;	Chosen strategy is simple_byte
  1242     00BE  0823               	movf	??_adc_init,w
  1243     00BF  3A01               	xorlw	1	; case 1
  1244     00C0  1903               	skipnz
  1245     00C1  28A4               	goto	l1325
  1246     00C2  3A05               	xorlw	5	; case 4
  1247     00C3  1903               	skipnz
  1248     00C4  28A7               	goto	l1327
  1249     00C5  3A0C               	xorlw	12	; case 8
  1250     00C6  1903               	skipnz
  1251     00C7  28AC               	goto	l1329
  1252     00C8  3A1C               	xorlw	28	; case 20
  1253     00C9  1903               	skipnz
  1254     00CA  28B1               	goto	l1331
  1255     00CB  28CC               	goto	l1337
  1256     00CC                     l1337:
  1257                           
  1258                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1259     00CC  0822               	movf	adc_init@channel,w
  1260     00CD  00A3               	movwf	??_adc_init
  1261     00CE  0DA3               	rlf	??_adc_init,f
  1262     00CF  0DA3               	rlf	??_adc_init,f
  1263     00D0  081F               	movf	31,w	;volatile
  1264     00D1  0623               	xorwf	??_adc_init,w
  1265     00D2  39C3               	andlw	-61
  1266     00D3  0623               	xorwf	??_adc_init,w
  1267     00D4  009F               	movwf	31	;volatile
  1268     00D5                     l1339:
  1269                           
  1270                           ;ADC_lib.c: 38:     ADON = 1;
  1271     00D5  141F               	bsf	31,0	;volatile
  1272     00D6                     l159:
  1273     00D6  0008               	return
  1274     00D7                     __end_of_adc_init:
  1275                           
  1276                           	psect	text5
  1277     01E1                     __ptext5:	
  1278 ;; *************** function _multiplex *****************
  1279 ;; Defined at:
  1280 ;;		line 129 in file "Lab1.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  selector        1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  selector        1    0[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       1       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         0       1       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 3
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308     01E1                     _multiplex:	
  1309                           ;psect for function _multiplex
  1310                           
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _multiplex: [wreg]
  1314                           ;multiplex@selector stored from wreg
  1315     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1316     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1317     01E3  00A0               	movwf	multiplex@selector
  1318     01E4                     l1473:
  1319     01E4  1C20               	btfss	multiplex@selector,0
  1320     01E5  29E7               	goto	u411
  1321     01E6  29E8               	goto	u410
  1322     01E7                     u411:
  1323     01E7  29ED               	goto	l114
  1324     01E8                     u410:
  1325     01E8                     l1475:
  1326     01E8  1009               	bcf	9,0	;volatile
  1327     01E9                     l1477:
  1328     01E9  0870               	movf	_disp2,w
  1329     01EA  0088               	movwf	8	;volatile
  1330     01EB                     l1479:
  1331     01EB  1489               	bsf	9,1	;volatile
  1332     01EC  29F1               	goto	l116
  1333     01ED                     l114:
  1334     01ED  1089               	bcf	9,1	;volatile
  1335     01EE                     l1481:
  1336     01EE  0871               	movf	_disp1,w
  1337     01EF  0088               	movwf	8	;volatile
  1338     01F0                     l1483:
  1339     01F0  1409               	bsf	9,0	;volatile
  1340     01F1                     l116:
  1341     01F1  0008               	return
  1342     01F2                     __end_of_multiplex:
  1343                           
  1344                           	psect	text6
  1345     001F                     __ptext6:	
  1346 ;; *************** function _hex_to_7seg *****************
  1347 ;; Defined at:
  1348 ;;		line 21 in file "disp_7seg.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  hex             1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  hex             1    2[BANK0 ] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      unsigned char 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       1       0       0       0
  1364 ;;      Temps:          0       2       0       0       0
  1365 ;;      Totals:         0       3       0       0       0
  1366 ;;Total ram usage:        3 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 3
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     001F                     _hex_to_7seg:	
  1377                           ;psect for function _hex_to_7seg
  1378                           
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _hex_to_7seg: [wreg-fsr0h+status,2+status,0]
  1382                           ;hex_to_7seg@hex stored from wreg
  1383     001F  1283               	bcf	3,5	;RP0=0, select bank0
  1384     0020  1303               	bcf	3,6	;RP1=0, select bank0
  1385     0021  00A2               	movwf	hex_to_7seg@hex
  1386     0022                     l1397:
  1387                           
  1388                           ;disp_7seg.c: 22:     switch(hex){
  1389     0022  2843               	goto	l1465
  1390     0023                     l1399:
  1391                           
  1392                           ;disp_7seg.c: 24:             return 0b00111111;
  1393     0023  303F               	movlw	63
  1394     0024  287D               	goto	l176
  1395     0025                     l1403:
  1396                           
  1397                           ;disp_7seg.c: 26:             return 0b00000110;
  1398     0025  3006               	movlw	6
  1399     0026  287D               	goto	l176
  1400     0027                     l1407:
  1401                           
  1402                           ;disp_7seg.c: 28:             return 0b01011011;
  1403     0027  305B               	movlw	91
  1404     0028  287D               	goto	l176
  1405     0029                     l1411:
  1406                           
  1407                           ;disp_7seg.c: 30:             return 0b01001111;
  1408     0029  304F               	movlw	79
  1409     002A  287D               	goto	l176
  1410     002B                     l1415:
  1411                           
  1412                           ;disp_7seg.c: 32:             return 0b01100110;
  1413     002B  3066               	movlw	102
  1414     002C  287D               	goto	l176
  1415     002D                     l1419:
  1416                           
  1417                           ;disp_7seg.c: 34:             return 0b01101101;
  1418     002D  306D               	movlw	109
  1419     002E  287D               	goto	l176
  1420     002F                     l1423:
  1421                           
  1422                           ;disp_7seg.c: 36:             return 0b01111101;
  1423     002F  307D               	movlw	125
  1424     0030  287D               	goto	l176
  1425     0031                     l1427:
  1426                           
  1427                           ;disp_7seg.c: 38:             return 0b00000111;
  1428     0031  3007               	movlw	7
  1429     0032  287D               	goto	l176
  1430     0033                     l1431:
  1431                           
  1432                           ;disp_7seg.c: 40:             return 0b01111111;
  1433     0033  307F               	movlw	127
  1434     0034  287D               	goto	l176
  1435     0035                     l1435:
  1436                           
  1437                           ;disp_7seg.c: 42:             return 0b01101111;
  1438     0035  306F               	movlw	111
  1439     0036  287D               	goto	l176
  1440     0037                     l1439:
  1441                           
  1442                           ;disp_7seg.c: 44:             return 0b01110111;
  1443     0037  3077               	movlw	119
  1444     0038  287D               	goto	l176
  1445     0039                     l1443:
  1446                           
  1447                           ;disp_7seg.c: 46:             return 0b01111100;
  1448     0039  307C               	movlw	124
  1449     003A  287D               	goto	l176
  1450     003B                     l1447:
  1451                           
  1452                           ;disp_7seg.c: 48:             return 0b00111001;
  1453     003B  3039               	movlw	57
  1454     003C  287D               	goto	l176
  1455     003D                     l1451:
  1456                           
  1457                           ;disp_7seg.c: 50:             return 0b01011110;
  1458     003D  305E               	movlw	94
  1459     003E  287D               	goto	l176
  1460     003F                     l1455:
  1461                           
  1462                           ;disp_7seg.c: 52:             return 0b01111001;
  1463     003F  3079               	movlw	121
  1464     0040  287D               	goto	l176
  1465     0041                     l1459:
  1466                           
  1467                           ;disp_7seg.c: 54:             return 0b01110001;
  1468     0041  3071               	movlw	113
  1469     0042  287D               	goto	l176
  1470     0043                     l1465:
  1471     0043  0822               	movf	hex_to_7seg@hex,w
  1472     0044  00A0               	movwf	??_hex_to_7seg
  1473     0045  01A1               	clrf	??_hex_to_7seg+1
  1474                           
  1475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 1, Range of values is 0 to 0
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte            4     3 (average)
  1481                           ; direct_byte           11     8 (fixed)
  1482                           ; jumptable            260     6 (fixed)
  1483                           ;	Chosen strategy is simple_byte
  1484     0046  0821               	movf	??_hex_to_7seg+1,w
  1485     0047  3A00               	xorlw	0	; case 0
  1486     0048  1903               	skipnz
  1487     0049  284B               	goto	l1559
  1488     004A  287D               	goto	l176
  1489     004B                     l1559:
  1490                           
  1491                           ; Switch size 1, requested type "simple"
  1492                           ; Number of cases is 16, Range of values is 0 to 15
  1493                           ; switch strategies available:
  1494                           ; Name         Instructions Cycles
  1495                           ; simple_byte           49    25 (average)
  1496                           ; direct_byte           56     8 (fixed)
  1497                           ; jumptable            260     6 (fixed)
  1498                           ;	Chosen strategy is simple_byte
  1499     004B  0820               	movf	??_hex_to_7seg,w
  1500     004C  3A00               	xorlw	0	; case 0
  1501     004D  1903               	skipnz
  1502     004E  2823               	goto	l1399
  1503     004F  3A01               	xorlw	1	; case 1
  1504     0050  1903               	skipnz
  1505     0051  2825               	goto	l1403
  1506     0052  3A03               	xorlw	3	; case 2
  1507     0053  1903               	skipnz
  1508     0054  2827               	goto	l1407
  1509     0055  3A01               	xorlw	1	; case 3
  1510     0056  1903               	skipnz
  1511     0057  2829               	goto	l1411
  1512     0058  3A07               	xorlw	7	; case 4
  1513     0059  1903               	skipnz
  1514     005A  282B               	goto	l1415
  1515     005B  3A01               	xorlw	1	; case 5
  1516     005C  1903               	skipnz
  1517     005D  282D               	goto	l1419
  1518     005E  3A03               	xorlw	3	; case 6
  1519     005F  1903               	skipnz
  1520     0060  282F               	goto	l1423
  1521     0061  3A01               	xorlw	1	; case 7
  1522     0062  1903               	skipnz
  1523     0063  2831               	goto	l1427
  1524     0064  3A0F               	xorlw	15	; case 8
  1525     0065  1903               	skipnz
  1526     0066  2833               	goto	l1431
  1527     0067  3A01               	xorlw	1	; case 9
  1528     0068  1903               	skipnz
  1529     0069  2835               	goto	l1435
  1530     006A  3A03               	xorlw	3	; case 10
  1531     006B  1903               	skipnz
  1532     006C  2837               	goto	l1439
  1533     006D  3A01               	xorlw	1	; case 11
  1534     006E  1903               	skipnz
  1535     006F  2839               	goto	l1443
  1536     0070  3A07               	xorlw	7	; case 12
  1537     0071  1903               	skipnz
  1538     0072  283B               	goto	l1447
  1539     0073  3A01               	xorlw	1	; case 13
  1540     0074  1903               	skipnz
  1541     0075  283D               	goto	l1451
  1542     0076  3A03               	xorlw	3	; case 14
  1543     0077  1903               	skipnz
  1544     0078  283F               	goto	l1455
  1545     0079  3A01               	xorlw	1	; case 15
  1546     007A  1903               	skipnz
  1547     007B  2841               	goto	l1459
  1548     007C  287D               	goto	l176
  1549     007D                     l176:
  1550     007D  0008               	return
  1551     007E                     __end_of_hex_to_7seg:
  1552                           
  1553                           	psect	text7
  1554     0202                     __ptext7:	
  1555 ;; *************** function _alarm *****************
  1556 ;; Defined at:
  1557 ;;		line 142 in file "Lab1.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  ref             1    wreg     unsigned char 
  1560 ;;  var             1    0[BANK0 ] unsigned char 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  ref             1    1[BANK0 ] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       1       0       0       0
  1573 ;;      Locals:         0       1       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         0       2       0       0       0
  1576 ;;Total ram usage:        2 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 3
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586     0202                     _alarm:	
  1587                           ;psect for function _alarm
  1588                           
  1589                           
  1590                           ;incstack = 0
  1591                           ; Regs used in _alarm: [wreg]
  1592                           ;alarm@ref stored from wreg
  1593     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1594     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1595     0204  00A1               	movwf	alarm@ref
  1596     0205                     l1485:
  1597     0205  0821               	movf	alarm@ref,w
  1598     0206  0220               	subwf	alarm@var,w
  1599     0207  1C03               	skipc
  1600     0208  2A0A               	goto	u421
  1601     0209  2A0B               	goto	u420
  1602     020A                     u421:
  1603     020A  2A0D               	goto	l119
  1604     020B                     u420:
  1605     020B                     l1487:
  1606     020B  1509               	bsf	9,2	;volatile
  1607     020C  2A0E               	goto	l121
  1608     020D                     l119:
  1609     020D  1109               	bcf	9,2	;volatile
  1610     020E                     l121:
  1611     020E  0008               	return
  1612     020F                     __end_of_alarm:
  1613                           
  1614                           	psect	text8
  1615     01F2                     __ptext8:	
  1616 ;; *************** function _adc_read *****************
  1617 ;; Defined at:
  1618 ;;		line 42 in file "ADC_lib.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  2    0[BANK0 ] unsigned int 
  1625 ;; Registers used:
  1626 ;;		wreg
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       2       0       0       0
  1633 ;;      Locals:         0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0
  1635 ;;      Totals:         0       2       0       0       0
  1636 ;;Total ram usage:        2 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 3
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646     01F2                     _adc_read:	
  1647                           ;psect for function _adc_read
  1648                           
  1649     01F2                     l1383:	
  1650                           ;incstack = 0
  1651                           ; Regs used in _adc_read: [wreg]
  1652                           
  1653                           
  1654                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  1655     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1656     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1657     01F4  149F               	bsf	31,1	;volatile
  1658     01F5                     l162:	
  1659                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  1660                           
  1661     01F5  189F               	btfsc	31,1	;volatile
  1662     01F6  29F8               	goto	u391
  1663     01F7  29F9               	goto	u390
  1664     01F8                     u391:
  1665     01F8  29F5               	goto	l162
  1666     01F9                     u390:
  1667     01F9                     l1385:
  1668                           
  1669                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  1670     01F9  081E               	movf	30,w	;volatile
  1671     01FA  00A1               	movwf	?_adc_read+1
  1672     01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1673     01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1674     01FD  081E               	movf	30,w	;volatile
  1675     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1676     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1677     0200  00A0               	movwf	?_adc_read
  1678     0201                     l165:
  1679     0201  0008               	return
  1680     0202                     __end_of_adc_read:
  1681                           
  1682                           	psect	text9
  1683     01A4                     __ptext9:	
  1684 ;; *************** function _isr *****************
  1685 ;; Defined at:
  1686 ;;		line 58 in file "Lab1.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          3       0       0       0       0
  1703 ;;      Totals:         3       0       0       0       0
  1704 ;;Total ram usage:        3 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 2
  1707 ;; This function calls:
  1708 ;;		_ioc_portB
  1709 ;; This function is called by:
  1710 ;;		Interrupt level 1
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     01A4                     _isr:	
  1715                           ;psect for function _isr
  1716                           
  1717     01A4                     i1l1243:
  1718                           
  1719                           ;Lab1.c: 59:     }
  1720     01A4  1D0B               	btfss	11,2	;volatile
  1721     01A5  29A7               	goto	u31_21
  1722     01A6  29A8               	goto	u31_20
  1723     01A7                     u31_21:
  1724     01A7  29B1               	goto	i1l1251
  1725     01A8                     u31_20:
  1726     01A8                     i1l1245:
  1727                           
  1728                           ;Lab1.c: 60: }
  1729     01A8  3001               	movlw	1
  1730     01A9  00FF               	movwf	btemp+1
  1731     01AA  087F               	movf	btemp+1,w
  1732     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1733     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1734     01AD  07AB               	addwf	_dispSel,f
  1735     01AE                     i1l1247:
  1736                           
  1737                           ;Lab1.c: 62: void setup(void){
  1738     01AE  3064               	movlw	100
  1739     01AF  0081               	movwf	1	;volatile
  1740     01B0                     i1l1249:
  1741                           
  1742                           ;Lab1.c: 63: 
  1743     01B0  110B               	bcf	11,2	;volatile
  1744     01B1                     i1l1251:
  1745                           
  1746                           ;Lab1.c: 65:     ANSELH= 0b00101000;
  1747     01B1  1C0B               	btfss	11,0	;volatile
  1748     01B2  29B4               	goto	u32_21
  1749     01B3  29B5               	goto	u32_20
  1750     01B4                     u32_21:
  1751     01B4  29BB               	goto	i1l93
  1752     01B5                     u32_20:
  1753     01B5                     i1l1253:
  1754                           
  1755                           ;Lab1.c: 66:     TRISA = 0;
  1756     01B5  120A  118A  215C  120A  118A  	fcall	_ioc_portB
  1757     01BA                     i1l1255:
  1758                           
  1759                           ;Lab1.c: 67:     PORTA = 0x7F;
  1760     01BA  100B               	bcf	11,0	;volatile
  1761     01BB                     i1l93:
  1762     01BB  0879               	movf	??_isr+2,w
  1763     01BC  00FF               	movwf	btemp+1
  1764     01BD  0878               	movf	??_isr+1,w
  1765     01BE  008A               	movwf	10
  1766     01BF  0E77               	swapf	??_isr,w
  1767     01C0  0083               	movwf	3
  1768     01C1  0EFE               	swapf	btemp,f
  1769     01C2  0E7E               	swapf	btemp,w
  1770     01C3  0009               	retfie
  1771     01C4                     __end_of_isr:
  1772                           
  1773                           	psect	intentry
  1774     0004                     __pintentry:	
  1775                           ;incstack = 0
  1776                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1777                           
  1778     0004                     interrupt_function:
  1779     007E                     saved_w	set	btemp
  1780     0004  00FE               	movwf	btemp
  1781     0005  0E03               	swapf	3,w
  1782     0006  00F7               	movwf	??_isr
  1783     0007  080A               	movf	10,w
  1784     0008  00F8               	movwf	??_isr+1
  1785     0009  087F               	movf	btemp+1,w
  1786     000A  00F9               	movwf	??_isr+2
  1787     000B  120A  118A  29A4   	ljmp	_isr
  1788                           
  1789                           	psect	text10
  1790     015C                     __ptext10:	
  1791 ;; *************** function _ioc_portB *****************
  1792 ;; Defined at:
  1793 ;;		line 72 in file "Lab1.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 1
  1814 ;; This function calls:
  1815 ;;		_adc_sel_channel
  1816 ;; This function is called by:
  1817 ;;		_isr
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821     015C                     _ioc_portB:	
  1822                           ;psect for function _ioc_portB
  1823                           
  1824     015C                     i1l1085:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _ioc_portB: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1827                           
  1828                           
  1829                           ;Lab1.c: 73:     PORTE = 0;
  1830     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1831     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1832     015E  1806               	btfsc	6,0	;volatile
  1833     015F  2961               	goto	u23_21
  1834     0160  2962               	goto	u23_20
  1835     0161                     u23_21:
  1836     0161  2966               	goto	i1l1089
  1837     0162                     u23_20:
  1838     0162                     i1l1087:
  1839     0162  3001               	movlw	1
  1840     0163  00FF               	movwf	btemp+1
  1841     0164  087F               	movf	btemp+1,w
  1842     0165  0785               	addwf	5,f	;volatile
  1843     0166                     i1l1089:
  1844                           
  1845                           ;Lab1.c: 74: 
  1846     0166  1886               	btfsc	6,1	;volatile
  1847     0167  2969               	goto	u24_21
  1848     0168  296A               	goto	u24_20
  1849     0169                     u24_21:
  1850     0169  296C               	goto	i1l1093
  1851     016A                     u24_20:
  1852     016A                     i1l1091:
  1853     016A  3001               	movlw	1
  1854     016B  0285               	subwf	5,f	;volatile
  1855     016C                     i1l1093:
  1856                           
  1857                           ;Lab1.c: 75: 
  1858     016C  1906               	btfsc	6,2	;volatile
  1859     016D  296F               	goto	u25_21
  1860     016E  2970               	goto	u25_20
  1861     016F                     u25_21:
  1862     016F  2976               	goto	i1l1097
  1863     0170                     u25_20:
  1864     0170                     i1l1095:
  1865     0170  300D               	movlw	13
  1866     0171  120A  118A  220F  120A  118A  	fcall	_adc_sel_channel
  1867     0176                     i1l1097:
  1868                           
  1869                           ;Lab1.c: 76:     OSCCONbits.IRCF = 0b111;
  1870     0176  1283               	bcf	3,5	;RP0=0, select bank0
  1871     0177  1303               	bcf	3,6	;RP1=0, select bank0
  1872     0178  1986               	btfsc	6,3	;volatile
  1873     0179  297B               	goto	u26_21
  1874     017A  297C               	goto	u26_20
  1875     017B                     u26_21:
  1876     017B  2982               	goto	i1l100
  1877     017C                     u26_20:
  1878     017C                     i1l1099:
  1879     017C  300B               	movlw	11
  1880     017D  120A  118A  220F  120A  118A  	fcall	_adc_sel_channel
  1881     0182                     i1l100:
  1882     0182  0008               	return
  1883     0183                     __end_of_ioc_portB:
  1884                           
  1885                           	psect	text11
  1886     020F                     __ptext11:	
  1887 ;; *************** function _adc_sel_channel *****************
  1888 ;; Defined at:
  1889 ;;		line 49 in file "ADC_lib.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  channel         1    wreg     unsigned char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  channel         1    1[COMMON] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         1       0       0       0       0
  1905 ;;      Temps:          1       0       0       0       0
  1906 ;;      Totals:         2       0       0       0       0
  1907 ;;Total ram usage:        2 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_ioc_portB
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     020F                     _adc_sel_channel:	
  1917                           ;psect for function _adc_sel_channel
  1918                           
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _adc_sel_channel: [wreg+status,2+status,0]
  1922                           ;adc_sel_channel@channel stored from wreg
  1923     020F  00F6               	movwf	adc_sel_channel@channel
  1924     0210                     i1l1053:
  1925                           
  1926                           ;ADC_lib.c: 50:     ADCON0bits.CHS = channel;
  1927     0210  0876               	movf	adc_sel_channel@channel,w
  1928     0211  00F5               	movwf	??_adc_sel_channel
  1929     0212  0DF5               	rlf	??_adc_sel_channel,f
  1930     0213  0DF5               	rlf	??_adc_sel_channel,f
  1931     0214  1283               	bcf	3,5	;RP0=0, select bank0
  1932     0215  1303               	bcf	3,6	;RP1=0, select bank0
  1933     0216  081F               	movf	31,w	;volatile
  1934     0217  0675               	xorwf	??_adc_sel_channel,w
  1935     0218  39C3               	andlw	-61
  1936     0219  0675               	xorwf	??_adc_sel_channel,w
  1937     021A  009F               	movwf	31	;volatile
  1938     021B                     i1l168:
  1939     021B  0008               	return
  1940     021C                     __end_of_adc_sel_channel:
  1941     007E                     btemp	set	126	;btemp
  1942     007E                     wtemp0	set	126
  1943                           
  1944                           	psect	config
  1945                           
  1946                           ;Config register CONFIG1 @ 0x2007
  1947                           ;	Oscillator Selection bits
  1948                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1949                           ;	Watchdog Timer Enable bit
  1950                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1951                           ;	Power-up Timer Enable bit
  1952                           ;	PWRTE = OFF, PWRT disabled
  1953                           ;	RE3/MCLR pin function select bit
  1954                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1955                           ;	Code Protection bit
  1956                           ;	CP = OFF, Program memory code protection is disabled
  1957                           ;	Data Code Protection bit
  1958                           ;	CPD = OFF, Data memory code protection is disabled
  1959                           ;	Brown Out Reset Selection bits
  1960                           ;	BOREN = OFF, BOR disabled
  1961                           ;	Internal External Switchover bit
  1962                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1963                           ;	Fail-Safe Clock Monitor Enabled bit
  1964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1965                           ;	Low Voltage Programming Enable bit
  1966                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1967                           ;	In-Circuit Debugger Mode bit
  1968                           ;	DEBUG = 0x1, unprogrammed default
  1969     2007                     	org	8199
  1970     2007  20D4               	dw	8404
  1971                           
  1972                           ;Config register CONFIG2 @ 0x2008
  1973                           ;	Brown-out Reset Selection bit
  1974                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1975                           ;	Flash Program Memory Self Write Enable bits
  1976                           ;	WRT = OFF, Write protection off
  1977     2008                     	org	8200
  1978     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      9      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _ioc_portB->_adc_sel_channel

Critical Paths under _main in BANK0

    _main->_split_nibbles
    _setup->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     862
                           _adc_read
                              _alarm
                        _hex_to_7seg
                          _multiplex
                              _setup
                      _split_nibbles
 ---------------------------------------------------------------------------------
 (1) _split_nibbles                                        9     7      2     130
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     518
                           _adc_init
                          _iocb_init
 ---------------------------------------------------------------------------------
 (2) _iocb_init                                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     425
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _multiplex                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _hex_to_7seg                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _alarm                                                2     1      1     152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              2 COMMON     3     3      0
                          _ioc_portB
 ---------------------------------------------------------------------------------
 (4) _ioc_portB                                            0     0      0      22
                    _adc_sel_channel
 ---------------------------------------------------------------------------------
 (5) _adc_sel_channel                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_read
   _alarm
   _hex_to_7seg
   _multiplex
   _setup
     _adc_init
     _iocb_init
   _split_nibbles

 _isr (ROOT)
   _ioc_portB
     _adc_sel_channel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 19 11:30:54 2023

                    l111 0119                      l121 020E                      l114 01ED  
                    l116 01F1                      l119 020D                      l136 01E0  
                    l162 01F5                      l165 0201                      l159 00D6  
                    l176 007D                      l195 01A3                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RE0 0048                      _RE1 0049  
                    _RE2 004A                      u410 01E8                      u330 0088  
                    u411 01E7                      u331 0084                      u420 020B  
                    u421 020A                      u405 018C                      u350 0094  
                    u351 0090                      u344 008B                      u370 00A0  
                    u371 009C                      u364 0097                      u390 01F9  
                    u391 01F8                      u384 00A3                      _SCS 0478  
                    _isr 01A4             ?_hex_to_7seg 0075                     l1321 01DF  
                   l1411 0029                     l1403 0025                     l1331 00B1  
                   l1323 0081                     l1315 01C7                     l1325 00A4  
                   l1317 01CD                     l1501 013F                     l1431 0033  
                   l1423 002F                     l1415 002B                     l1407 0027  
                   l1327 00A7                     l1335 00B4                     l1319 01D6  
                   l1351 00E3                     l1503 0146                     l1329 00AC  
                   l1337 00CC                     l1361 00F2                     l1353 00E6  
                   l1345 00D7                     l1505 014E                     l1451 003D  
                   l1443 0039                     l1435 0035                     l1427 0031  
                   l1419 002D                     l1339 00D5                     l1371 010D  
                   l1363 00F5                     l1355 00E9                     l1347 00DA  
                   l1381 0118                     l1373 010E                     l1365 00F9  
                   l1357 00EC                     l1349 00DC                     l1383 01F2  
                   l1455 003F                     l1447 003B                     l1439 0037  
                   l1375 010F                     l1367 00FA                     l1359 00EF  
                   l1391 0189                     l1385 01F9                     l1465 0043  
                   l1481 01EE                     l1473 01E4                     l1377 0113  
                   l1369 0100                     l1393 0194                     l1459 0041  
                   l1483 01F0                     l1475 01E8                     l1379 0114  
                   l1491 011F                     l1485 0205                     l1397 0022  
                   l1477 01E9                     l1557 00BE                     l1389 0186  
                   l1493 0128                     l1487 020B                     l1559 004B  
                   l1399 0023                     l1479 01EB                     l1495 0134  
                   l1497 0136                     l1489 011A                     l1499 0138  
                   _ADFM 04FF                     ?_isr 0075                     _ADON 00F8  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   _IOCB 0096                     _RBIE 005B                     _RBIF 0058  
                   i1l93 01BB                     _TMR0 0001                     _WPUB 0095  
                   _main 011A                     btemp 007E                     start 000E  
 adc_sel_channel@channel 0076                    ??_isr 0077            _split_nibbles 0183  
                  ?_main 0075                    _ANSEL 0188                    i1l100 0182  
                  i1l168 021B                    _VCFG0 04FC                    _VCFG1 04FD  
                  u23_20 0162                    u31_20 01A8                    u23_21 0161  
                  u31_21 01A7                    u24_20 016A                    u32_20 01B5  
                  u24_21 0169                    u32_21 01B4                    u25_20 0170  
                  u25_21 016F                    u26_20 017C                    u26_21 017B  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _nRBPU 040F                    _alarm 0202                    _disp1 0071  
                  _disp2 0070                    _setup 00D7                    pclath 000A  
       ?_adc_sel_channel 0075                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 015C           ?_split_nibbles 0020  
                 ??_main 0029                   ?_alarm 0020                   _ADRESH 001E  
                 _ADRESL 009E                   ?_setup 0075                   _ANSELH 0189  
       __end_of_adc_init 00D7         __end_of_adc_read 0202                   i1l1053 0210  
                 i1l1091 016A                   i1l1251 01B1                   i1l1243 01A4  
                 i1l1093 016C                   i1l1085 015C                   i1l1253 01B5  
                 i1l1245 01A8                   i1l1095 0170                   i1l1087 0162  
                 i1l1255 01BA                   i1l1247 01AE                   i1l1097 0176  
                 i1l1089 0166                   i1l1249 01B0                   i1l1099 017C  
                 saved_w 007E     split_nibbles@low_nib 0027  __end_of__initialization 001B  
        ??_split_nibbles 0022           __pcstackCOMMON 0075            __end_of_alarm 020F  
          __end_of_setup 011A           _OPTION_REGbits 0081                  ??_alarm 0021  
                ??_setup 0026               __pbssBANK0 0029               __pmaintext 011A  
             __pintentry 0004                ?_adc_init 0020                ?_adc_read 0020  
       split_nibbles@hex 0028                  _adc_val 0074        __end_of_iocb_init 01E1  
      __end_of_ioc_portB 0183               ??_adc_init 0023               ??_adc_read 0022  
                __ptext1 0183                  __ptext2 00D7                  __ptext3 01C4  
                __ptext4 007E                  __ptext5 01E1                  __ptext6 001F  
                __ptext7 0202                  __ptext8 01F2                  __ptext9 01A4  
                _dispSel 002B                  _nibbles 0029                  _low_nib 0072  
   end_of_initialization 001B    split_nibbles@high_nib 0026        __end_of_multiplex 01F2  
    start_initialization 0011            ??_hex_to_7seg 0020              __end_of_isr 01C4  
  __end_of_split_nibbles 01A4          adc_init@channel 0022        ??_adc_sel_channel 0075  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0020  
    __end_of_hex_to_7seg 007E            adc_init@clock 0021                adc_init@J 0025  
              adc_init@R 0020                _iocb_init 01C4                _ioc_portB 015C  
      interrupt_function 0004                _multiplex 01E1               _ADCON0bits 001F  
             ?_iocb_init 0075               ?_ioc_portB 0075        multiplex@selector 0020  
            _hex_to_7seg 001F          iocb_init@pinesB 0020               ?_multiplex 0075  
               _adc_init 007E                 _adc_read 01F2           hex_to_7seg@hex 0022  
               __ptext10 015C                 __ptext11 020F                 _high_nib 0073  
               alarm@ref 0021                 alarm@var 0020          _adc_sel_channel 020F  
            ??_iocb_init 0020              ??_ioc_portB 0077                 intlevel1 0000  
             _OSCCONbits 008F              ??_multiplex 0020  __end_of_adc_sel_channel 021C  
